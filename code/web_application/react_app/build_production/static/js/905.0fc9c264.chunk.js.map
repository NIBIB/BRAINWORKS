{"version":3,"file":"static/js/905.0fc9c264.chunk.js","mappings":"qJAgBA,IARmB,SAAC,GAAyC,IAAvCA,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,UAChC,OACE,SAAC,MAAD,gBAAMC,MAAM,WAAWC,GAAIC,EAAAA,GAAiBC,GAAIL,GAAUC,GAA1D,aACGF,IAGN,C,kKC4ED,UAvEe,WACb,IAAMO,GAAWC,EAAAA,EAAAA,MACTC,GAAmBC,EAAAA,EAAAA,KAAnBD,eACAE,GAAmBC,EAAAA,EAAAA,KAAnBD,eAEFE,GAAQC,EAAAA,EAAAA,MAgCd,OACE,SAAC,IAAD,CACEC,QA9CM,eA+CNC,eAhCiB,SAACC,EAAWC,GAAiB,IAAD,EAO/C,GAAoB,mDAAZ,OAAJD,QAAI,IAAJA,OAAA,EAAAA,EAAME,OAUR,OATAN,EAAM,CACJO,MAAM,4BAAD,OAA8BF,EAAOG,MAArC,KACLC,YAAY,qFACZC,OAAQ,UACRC,SAAU,KACVC,YAAY,EACZC,SAAU,aAEZnB,EAAS,4BAIXI,EAAe,CACbM,KAAMA,EACNU,UAAW,WApBQ,IAACC,IAqBN,OAACX,QAAD,IAACA,OAAD,EAACA,EAAMY,QApBrBpB,EAAemB,GACfrB,EAAS,IAoBR,EACDuB,WAAW,YAAD,iBAAcb,EAAKY,eAAnB,aAAc,EAAcE,OAEzC,EAMGC,iBAAkB,CAAEX,MAAO,GAAIY,SAAU,IAH3C,SAKG,gBAAGC,EAAH,EAAGA,aAAH,OACC,UAAC,IAAD,YACE,SAAC,IAAD,CACEd,MAAM,UACNe,KAAK,uCAEP,UAAC,KAAD,CAAQC,QAAS,EAAGC,MAAM,SAASC,EAAE,OAArC,WACE,SAAC,IAAD,CAAYC,SAAS,WACrB,SAAC,IAAD,CAAYA,SAAS,cACrB,SAAC,KAAD,CACEC,KAAK,SACLC,YAAY,OACZC,MAAM,OACNC,WAAYT,EAJd,uBASF,UAAC,IAAD,YACE,SAAC,IAAD,CAAYlC,KAAK,mBAAmBC,KAAK,qBACzC,SAAC,IAAD,CAAYD,KAAK,kCAAkCC,KAAK,iBApB7D,GA0BN,C,4EC1DD,IAXiB,SAAC,GAA4B,IAA1B2C,EAAyB,EAAzBA,SAClB,GAA2BC,EAAAA,EAAAA,IAAc,sBAAlCC,GAAP,eACA,OACE,SAAC,KAAD,CAAMR,EAAE,OAAOS,EAAE,OAAOC,QAAQ,SAASX,MAAM,SAA/C,UACE,SAAC,KAAD,CAAMC,EAAGQ,EAAmB,MAAQ,QAASG,EAAG,EAAGC,GAAG,QAAtD,UACE,SAAC,KAAD,UAAWN,OAIlB,C,8CCjBD,IAJmB,SAAC,GAA4B,IAA1BA,EAAyB,EAAzBA,SACpB,OAAO,SAAC,KAAD,CAAQO,GAAI,EAAZ,SAAgBP,GACxB,C,8CCWD,IAboB,SAAC,GAA+B,IAA7BxB,EAA4B,EAA5BA,MAAOe,EAAqB,EAArBA,KAC5B,OACE,UAAC,KAAD,CAAQiB,GAAI,EAAZ,WACE,SAAC,KAAD,CAASd,EAAE,OAAOe,UAAU,SAA5B,SACGjC,KAEH,SAAC,KAAD,CAAMiC,UAAU,SAASlD,MAAM,WAA/B,SACGgC,MAIR,C","sources":["common/components/RouterLink/index.tsx","pages/auth-pages/SignIn/index.tsx","pages/auth-pages/components/AuthCard/index.tsx","pages/auth-pages/components/AuthFooter/index.tsx","pages/auth-pages/components/AuthHeading/index.tsx"],"sourcesContent":["import { Link, LinkProps } from \"@chakra-ui/react\";\nimport { Link as ReactRouterLink } from \"react-router-dom\";\n\ninterface AppProps {\n  text: string;\n  link: string;\n  linkProps?: LinkProps;\n}\nconst RouterLink = ({ text, link, linkProps }: AppProps) => {\n  return (\n    <Link color=\"blue.600\" as={ReactRouterLink} to={link} {...linkProps}>\n      {text}\n    </Link>\n  );\n};\n\nexport default RouterLink;\n","import { Button, useToast, VStack } from \"@chakra-ui/react\";\nimport RouterLink from \"common/components/RouterLink\";\nimport AuthFooter from \"pages/auth-pages/components/AuthFooter\";\nimport AuthHeading from \"pages/auth-pages/components/AuthHeading\";\nimport { useNavigate } from \"react-router-dom\";\nimport useCurrentUser from \"common/hooks/useCurrentUser\";\nimport useAPIDataAlert from \"common/hooks/useAPIDataAlert\";\nimport { UserStateType } from \"store/models\";\nimport FlaskForm from \"common/components/FlaskForm\";\nimport AuthCard from \"../components/AuthCard\";\nimport FlaskField from \"common/components/FlaskField\";\n\nconst KEY = \"sign_in_form\";\n\n/**\n * SignIn\n *\n * React component for the sign in form with parameters generated from the back end\n */\nconst SignIn = () => {\n  const navigate = useNavigate();\n  const { setCurrentUser } = useCurrentUser();\n  const { apiDataAlerter } = useAPIDataAlert();\n\n  const toast = useToast();\n\n  // * Handles on form submit\n  const handleSubmit = (data: any, values: any) => {\n    // * Successful login, sets current user state and navigates to index page\n    const loginSuccess = (user: UserStateType) => {\n      setCurrentUser(user);\n      navigate(\"/\");\n    };\n    // * Non verified user, gets a verify email toast\n    if (data?.error === \"You must verify your email before logging in.\") {\n      toast({\n        title: `Please verify your email ${values.email} `,\n        description: `Check your inbox for the email verification or send yourself another verification.`,\n        status: \"warning\",\n        duration: null,\n        isClosable: true,\n        position: \"top\",\n      });\n      navigate(\"/send-verification-email\");\n      return;\n    }\n    // * Otherwise, alert success or give errors\n    apiDataAlerter({\n      data: data,\n      onSuccess: () => {\n        loginSuccess(data?.success);\n      },\n      successMsg: `Welcome, ${data.success?.name}`,\n    });\n  };\n\n  return (\n    <FlaskForm\n      formKey={KEY}\n      runAfterSubmit={handleSubmit}\n      resetAfterSubmit={{ email: \"\", password: \"\" }}\n    >\n      {({ isSubmitting }) => (\n        <AuthCard>\n          <AuthHeading\n            title=\"Sign in\"\n            desc=\"Welcome back, let's get creating.\"\n          />\n          <VStack spacing={5} align=\"center\" w=\"100%\">\n            <FlaskField property=\"email\" />\n            <FlaskField property=\"password\" />\n            <Button\n              type=\"submit\"\n              colorScheme=\"blue\"\n              width=\"full\"\n              isDisabled={isSubmitting}\n            >\n              Login\n            </Button>\n          </VStack>\n          <AuthFooter>\n            <RouterLink text=\"Forgot password?\" link=\"/forgotpassword\" />\n            <RouterLink text=\"Don't have an account? Sign up.\" link=\"/signup\" />\n          </AuthFooter>\n        </AuthCard>\n      )}\n    </FlaskForm>\n  );\n};\n\nexport default SignIn;\n","import {\n  Box,\n  Card,\n  CardBody,\n  Flex,\n  useMediaQuery,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { ReactNode } from \"react\";\n\ninterface AppProps {\n  children: ReactNode;\n}\n\n/**\n * AuthCard\n *\n * React component that wraps around auth elements, centering it and giving it a fixed width\n */\nconst AuthCard = ({ children }: AppProps) => {\n  const [isSmallerThan500] = useMediaQuery(\"(max-width: 500px)\");\n  return (\n    <Flex w=\"100%\" h=\"90vh\" justify=\"center\" align=\"center\">\n      <Card w={isSmallerThan500 ? \"90%\" : \"450px\"} p={5} bg=\"white\">\n        <CardBody>{children}</CardBody>\n      </Card>\n    </Flex>\n  );\n};\n\nexport default AuthCard;\n","import { VStack } from \"@chakra-ui/react\";\nimport { ReactNode } from \"react\";\n\ninterface AppProps {\n  children: ReactNode;\n}\n\nconst AuthFooter = ({ children }: AppProps) => {\n  return <VStack mt={5}>{children}</VStack>;\n};\n\nexport default AuthFooter;\n","import { Heading, Text, VStack } from \"@chakra-ui/react\";\n\ninterface AppProps {\n  title: string;\n  desc: string;\n}\n\nconst AuthHeading = ({ title, desc }: AppProps) => {\n  return (\n    <VStack mb={5}>\n      <Heading w=\"100%\" textAlign=\"center\">\n        {title}\n      </Heading>\n      <Text textAlign=\"center\" color=\"gray.600\">\n        {desc}\n      </Text>\n    </VStack>\n  );\n};\n\nexport default AuthHeading;\n"],"names":["text","link","linkProps","color","as","ReactRouterLink","to","navigate","useNavigate","setCurrentUser","useCurrentUser","apiDataAlerter","useAPIDataAlert","toast","useToast","formKey","runAfterSubmit","data","values","error","title","email","description","status","duration","isClosable","position","onSuccess","user","success","successMsg","name","resetAfterSubmit","password","isSubmitting","desc","spacing","align","w","property","type","colorScheme","width","isDisabled","children","useMediaQuery","isSmallerThan500","h","justify","p","bg","mt","mb","textAlign"],"sourceRoot":""}