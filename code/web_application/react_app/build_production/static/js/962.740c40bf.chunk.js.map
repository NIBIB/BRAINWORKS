{"version":3,"file":"static/js/962.740c40bf.chunk.js","mappings":"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","sources":["common/components/Charts/ReactChart.tsx","common/hooks/useAPIDataAlert.tsx","common/hooks/useGlobalAlert.tsx","common/hooks/useGlobalFormik.tsx","common/utils.ts","pages/visualizer-pages/VisualizerEditor/components/manage/LoadingVisualScreen/index.tsx","pages/visualizer-pages/hooks/useCurrentVisualizer.tsx","pages/visualizer-pages/VisualizerEditor/components/visualizers/GraphAPI/graphAPIUtils.js","pages/visualizer-pages/VisualizerEditor/components/visualizers/GraphAPI/index.tsx","pages/visualizer-pages/VisualizerEditor/components/manage/VisualizerRouter/VisualizerSettings.tsx","pages/visualizer-pages/VisualizerEditor/components/manage/VisualizerRouter/VisualizerNavigation.tsx","pages/visualizer-pages/VisualizerEditor/components/visualizers/PaperTriples/TableFragment.tsx","pages/visualizer-pages/VisualizerEditor/components/visualizers/PaperTriples/PaperInfo.tsx","pages/visualizer-pages/VisualizerEditor/components/visualizers/PaperTriples/index.tsx","pages/visualizer-pages/VisualizerEditor/components/visualizers/FrequencyTimelines/FrequencyTimeline.tsx","pages/visualizer-pages/VisualizerEditor/components/visualizers/FrequencyTimelines/index.tsx","pages/visualizer-pages/VisualizerEditor/components/manage/VisualizerRouter/index.tsx","pages/visualizer-pages/VisualizerEditor/index.tsx"],"sourcesContent":["import {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  PointElement,\n  LineElement,\n  BarController,\n  PieController,\n  LineController,\n  TimeScale,\n} from \"chart.js\";\nimport { Chart } from \"react-chartjs-2\";\nimport { ReactChartType } from \"../../models\";\n// @ts-ignore\nimport \"chartjs-adapter-date-fns\";\n\n/**\n * React Chart\n *\n * React component which wraps React ChartJS, reducing boiler plate code for ChartJS\n */\nconst ReactChart = ({\n  chartXAxis,\n  chartDatasets,\n  chartOptions,\n  chartType,\n}: ReactChartType) => {\n  ChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n    ArcElement,\n    PointElement,\n    LineElement,\n    BarController,\n    PieController,\n    LineController,\n    TimeScale\n  );\n\n  const reactChartOptions = chartOptions && { ...chartOptions };\n\n  const barChartOptions = chartType === \"bar\" && {\n    scales: {\n      y: {\n        ticks: {\n          precision: 0,\n        },\n      },\n    },\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      position: \"nearest\",\n    },\n\n    ...barChartOptions,\n    ...reactChartOptions,\n  };\n\n  const labels = chartXAxis;\n\n  const data = {\n    labels,\n    datasets: chartDatasets,\n  };\n\n  return <Chart type={chartType} options={options} data={data} />;\n};\n\nexport default ReactChart;\n","import { containsError, containsSuccess } from \"../utils\";\nimport useGlobalFormik from \"./useGlobalFormik\";\nimport useGlobalAlert from \"./useGlobalAlert\";\n\ninterface PostWrapperFunctionProps {\n  data: any;\n  onSuccess?: () => void;\n  successMsg?: string;\n  onFailure?: () => void;\n  failureMsg?: string;\n}\n\n/**\n * React hook that helps reduce redundant code when posting with `useAxios` to the BRAINWORKS API. It ultizes `useGlobalAlert` and and try and catch statements to help error check\n *\n * If JSON returns `success` or `error` it prints that message, otherwise it prints out success/error message from the API\n *\n * If request fails, then it prints out generic error message\n */\nconst useAPIDataAlert = (): {\n  /**\n   * Function that reduces redunancy of interpretting a JSON from the BRAINWORKS API\n   */\n  apiDataAlerter: ({\n    onSuccess,\n    successMsg,\n    onFailure,\n    failureMsg,\n    data,\n  }: PostWrapperFunctionProps) => Promise<void>;\n  /**\n   * Function that returns a standard error message\n   */\n  standardAlertError: () => void;\n  /**\n   * Function that puts a try catch statement around the given function, if there are errors it throws the standard alert error\n   */\n  tryCatchWrapper: (func: any) => void;\n} => {\n  const { showGlobalAlert } = useGlobalAlert();\n  const { formikSlice, newCaptcha } = useGlobalFormik();\n\n  const standardAlertError = () => {\n    showGlobalAlert(\"Something went wrong!\", \"Please try again later\");\n  };\n\n  const tryCatchWrapper = (func: any) => {\n    try {\n      func();\n    } catch {\n      standardAlertError();\n    }\n  };\n\n  const apiDataAlerter = async ({\n    onSuccess,\n    successMsg,\n    onFailure,\n    failureMsg,\n    data,\n  }: PostWrapperFunctionProps) => {\n    if (containsSuccess(data)) {\n      // * If object contains \"success\", alert either custom success message or one from back end\n      if (successMsg) {\n        showGlobalAlert(\"Success!\", successMsg, \"success\");\n      } else {\n        if (typeof data.success === \"string\") {\n          showGlobalAlert(\"Success!\", data.success, \"success\");\n        }\n      }\n      // * Run success function, if one is defined\n      if (onSuccess) {\n        onSuccess();\n      }\n    } else {\n      // * If object contains \"error\", alert either custom failure message or one from back end\n      if (containsError(data)) {\n        if (failureMsg) {\n          showGlobalAlert(\"Something went wrong!\", failureMsg, \"error\");\n        } else {\n          showGlobalAlert(\"Something went wrong!\", data.error);\n        }\n        // * If form has CAPTCHA, checking if image is set, if so set a new captcha\n        if (formikSlice.captcha.img.length > 0) {\n          newCaptcha();\n        }\n      }\n      // * Run failure function, if one is define\n      if (onFailure) {\n        onFailure();\n      }\n    }\n  };\n\n  return { apiDataAlerter, standardAlertError, tryCatchWrapper };\n};\n\nexport default useAPIDataAlert;\n","import { useToast } from \"@chakra-ui/react\";\nimport { hideAlert, showAlert } from \"../../store/features/alertSlice\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport { AlertType, ShowAlertType } from \"../../store/models\";\n\n/**\n * @returns state to hide or show global alert system\n */\n\ntype ShowGlobalAlertType = (\n  title: string,\n  desc: string,\n  status?: \"error\" | \"info\" | \"warning\" | \"success\" | \"loading\" | undefined,\n  duration?: number | null\n) => void;\n\n// TODO: clean this up like the status\nconst useGlobalAlert = (): {\n  globalAlert: AlertType;\n  showGlobalAlert: ShowGlobalAlertType;\n  hideGlobalAlert: () => void;\n} => {\n  const globalAlert = useAppSelector((state) => state.alert);\n  const dispatch = useAppDispatch();\n  const toast = useToast();\n\n  const showGlobalAlert: ShowGlobalAlertType = (\n    title,\n    desc,\n    status,\n    duration\n  ) => {\n    const alert: ShowAlertType = {\n      title: title,\n      desc: desc,\n      status: status ? status : \"error\",\n    };\n    dispatch(showAlert(alert));\n    toast({\n      position: \"top\",\n      title: title,\n      description: desc,\n      status: status !== undefined ? status : \"error\",\n      duration: duration !== undefined ? duration : 5000,\n      isClosable: true,\n    });\n  };\n\n  const hideGlobalAlert = () => {\n    dispatch(hideAlert());\n  };\n\n  return { globalAlert, showGlobalAlert, hideGlobalAlert };\n};\n\nexport default useGlobalAlert;\n","import useAxios from \"axios-hooks\";\n\nimport {\n  resetFormikSlice,\n  setFormikSlice,\n  setNewCaptcha,\n} from \"../../store/features/formikSlice\";\nimport { FormikSliceType } from \"../../store/models\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport { API_URL } from \"../templates/api\";\ninterface useFormikSliceReturnType {\n  formikSlice: any;\n  setFormik: (state: FormikSliceType) => void;\n  setCaptcha: any;\n  newCaptcha: any;\n  resetGlobalFormik: any;\n}\n\n/**\n * useGlobalFormik\n *\n * React hook that passes additional information globally for the formik forms\n */\nconst useGlobalFormik = (): useFormikSliceReturnType => {\n  const dispatch = useAppDispatch();\n  const formikSlice = useAppSelector((state) => state.formik);\n\n  /**\n   * getNewCaptcha\n   *\n   * Axios get request to get new information for the CAPTCHA\n   */\n  const [, getNewCaptcha] = useAxios(\n    {\n      url: `${API_URL}/new_captcha`,\n      withCredentials: true,\n    },\n    { manual: true }\n  );\n\n  /**\n   * resetGlobalFormik\n   *\n   * Redux reducer wrapper that resets the formikSlice to its initial values\n   */\n  const resetGlobalFormik = () => {\n    dispatch(resetFormikSlice());\n  };\n\n  /**\n   * setCaptcha\n   *\n   * Redux reducer wrapper that sets current CAPTCHA information in formikSlice\n   */\n  const setCaptcha = (img: string, audio: string) => {\n    dispatch(setNewCaptcha({ img: img, audio: audio }));\n  };\n\n  /**\n   * setFormik\n   *\n   * Function that wraps formikSlice dispatch\n   */\n  const setFormik = ({ key, fieldsInfo, loading }: FormikSliceType) => {\n    dispatch(\n      setFormikSlice({\n        key,\n        fieldsInfo,\n        loading,\n      })\n    );\n  };\n\n  /**\n   * newCaptcha\n   *\n   * Function that makes a get request to get a new captcha img & audio\n   */\n  const newCaptcha = async () => {\n    const { data } = await getNewCaptcha();\n    if (data) {\n      setCaptcha(data.img, data.audio);\n    } else {\n      setCaptcha(\"\", \"\");\n    }\n  };\n\n  return {\n    formikSlice,\n    setFormik,\n    setCaptcha,\n    newCaptcha,\n    resetGlobalFormik,\n  };\n};\n\nexport default useGlobalFormik;\n","/**\n * Function prevents default behavior of form, to reload\n */\nexport function preventFormSubmission(e: React.KeyboardEvent<HTMLFormElement>) {\n  if (e.key === \"Enter\") {\n    e.preventDefault();\n  }\n}\n\n/**\n * Function that returns true if object has key success\n */\nexport function containsSuccess(obj: any) {\n  return obj?.hasOwnProperty(\"success\");\n}\n\n/**\n * Function that returns true if object has key error\n */\nexport function containsError(obj: any) {\n  return obj?.hasOwnProperty(\"error\");\n}\n\n/**\n * Function that returns true if string is empty\n */\nexport function emptyString(s: string) {\n  return s.length === 0;\n}\n\n/**\n * Function that overwrites the yup to schema object because\n */\nexport const fixYupToSchemaObject = (s: string) => {};\n\n/**\n * Function that uses binary search to get autocomplete input\n */\nconst findMatch = (text: string, which = \"first\", arr: String[]) => {\n  if (text) {\n    text = text.toLowerCase();\n    let start = 0;\n    let end = arr.length - 1;\n    let candidate_index = null;\n    while (start <= end) {\n      let mid = Math.floor((start + end) / 2);\n      let elem = arr[mid][0].toLowerCase();\n      if (elem.substr(0, text.length) === text) {\n        candidate_index = mid;\n        if (which === \"first\") end = mid - 1;\n        else start = mid + 1;\n      } else if (elem < text) start = mid + 1;\n      else end = mid - 1;\n    }\n    return candidate_index;\n  }\n};\nexport const matchItems = (text: string, arr: String[]) => {\n  let matches: any = [];\n  let start = findMatch(text, \"first\", arr); // get first match\n  let end = findMatch(text, \"last\", arr); // get last match\n  if (start != null && end != null) {\n    matches = arr.slice(start, end + 1);\n  }\n  if (matches.length > 0) {\n    matches.sort(function (a: string, b: string) {\n      return a[1] < b[1] ? 1 : -1;\n    });\n    matches = matches.slice(0, 5);\n  }\n  return matches;\n};\n\n/**\n * Function that gets all info of field given the property name\n */\nexport function getFieldInfo(arr: any[], property: string) {\n  return arr.filter((item: any) => item.property === property).shift();\n}\n","import { Spinner, VStack } from \"@chakra-ui/react\";\nimport usePageTitle from \"../../../../../../common/hooks/usePageTitle\";\nimport PageHeader from \"../../../../../../common/components/PageHeader\";\n\n/**\n *\n * @returns\n */\nconst LoadingVisualScreen = () => {\n  usePageTitle(\"Loading\");\n\n  return (\n    <VStack w=\"100%\" h=\"100vh\" justify=\"Center\" spacing={20}>\n      <PageHeader\n        subTitle={\"Building\"}\n        title={\"Loading visualizer\"}\n        desc={\n          \"Please do not leave or refresh this page while your visual is being created.\"\n        }\n      />\n      <Spinner color={\"brand\"} size=\"xl\" />\n    </VStack>\n  );\n};\n\nexport default LoadingVisualScreen;\n","import { setVisualizerData } from \"../../../store/features/visualizerSlice\";\nimport { useAppDispatch, useAppSelector } from \"../../../store/hooks\";\n\n/**\n * useCurrentVisualizer\n *\n * React hook that returns the current visualizer's data generated from the backend\n */\nconst useCurrentVisualizer = (): {\n  setCurrentVisualizer: (data: any) => void;\n  curVisualizer: any;\n} => {\n  const dispatch = useAppDispatch();\n  const curVisualizer = useAppSelector((state) => state.visualizer);\n\n  const setCurrentVisualizer = (data: any) => {\n    dispatch(setVisualizerData(data));\n  };\n\n  return { setCurrentVisualizer, curVisualizer };\n};\n\nexport default useCurrentVisualizer;\n","import * as $ from \"jquery\";\nimport DOMPurify from \"dompurify\";\nconst NA = \"<span class='fw-lighter fst-italic'>Unavailable</span>\";\n\n// show the loading div\nfunction start_loading() {\n  $(\"div#popup-loading\").show();\n}\nfunction stop_loading() {\n  $(\"div#popup-loading\").hide();\n}\n\nfunction display_percentile(num) {\n  // cap a percentile with 1 decimal of precision\n  return Math.max(Math.min(num, 99.9), 0.1).toFixed(1).toLocaleString(\"en-US\");\n}\n\n// show the tutorial modal\nfunction tutorial_prompt() {\n  $(document).ready(function () {\n    let $accept = $(\"#accept-tutorial\");\n    let $modal = $(\"#accept-tutorial-modal\");\n    // let modal = UIkit.modal($modal);\n    // modal.show();\n    // $accept.click((event) => {\n    //   // when modal continue button is clicked\n    //   graph.tutorial(); // trigger the tutorial\n    // });\n  });\n}\n\n// Embed the given zip file data in the page to be downloaded\nfunction set_zip(data) {\n  $(document).ready(function () {\n    let $export_data = $(\"#export-data\"); // where to embed the data\n    let encoded = \"data:application/octet-stream;base64,\" + data;\n    $export_data[0].href = encoded;\n  });\n}\n\n// GraphAPI Callbacks\n\n// create a bootstrap-styled link that opens in a new window\nfunction link(text, url, _class) {\n  if (_class == undefined) _class = \"\";\n  _class = _class + \" text-decoration-none\";\n  _class = _class.trim();\n  return `<a href=${url} target=\"_blank\" rel=\"noreferrer noopener\" class=\"${_class}\">${text}</a>`;\n}\n\n// get a bootstrap-styled iframe that displays the paper_triples page\nfunction paper_info_iframe(pmid) {\n  let url = `/paper-info?pmid=${pmid}`;\n  return $(`<div class=\"ratio ratio-1x1\"><iframe src=${url}></iframe></div>`);\n}\n\n// Generate HTML for a section with node statistics\nfunction node_statistics(node) {\n  return `\n    <hr>\n    <span class=\"fw-bold\">Node Statistics</span>\n    <p>\n        Degree: ${node.data.degree?.toLocaleString(\"en-US\")} <br>\n        Degree Centrality: ${node.data.degree_centrality?.toLocaleString(\n          \"en-US\"\n        )} <br>\n        Closeness Centrality: ${node.data.closeness_centrality?.toLocaleString(\n          \"en-US\"\n        )} <br>\n    </p>\n    `;\n  // Eccentricity: ${node.data.eccentricity.toLocaleString(\"en-US\")} <br>\n  // Eigenvector Centrality: ${node.data.eigenvector_centrality?.toLocaleString(\"en-US\")} <br>\n}\n\n// Generate HTML for a section with edge statistics\nfunction edge_statistics(edge) {\n  return `\n    <hr>\n    <span class=\"fw-bold\">Edge Statistics</span>\n    <p>\n        Simmelian Strength: ${edge.data.simmelian_strength.toLocaleString(\n          \"en-US\"\n        )} <br>\n    </p>\n    `;\n}\n\n// configure the Graph API\nexport function configure_graph(data, representation) {\n  // data is the entire graph data to be given to the graph.\n  // representation is the string that is the data representation type used. \"paper_citations\" or \"triples\"\n\n  // Used to track how many times requests are made to add nodes to the graph\n  window.extra_map = {};\n\n  let ready_callback; // function to call when graphAPI is ready\n  let gravity = 1;\n  if (representation == \"paper_citations\") {\n    ready_callback = citation_configuration;\n  } else if (representation == \"triples\") {\n    ready_callback = triples_configuration;\n  } else if (representation == \"topic_co_occurrences\") {\n    ready_callback = co_occurrences_configuration;\n    gravity = 0.2;\n  }\n\n  // initialize graph object\n  window.graph = new window.Graph(data, {\n    gravity: gravity,\n  });\n\n  // add help menu trigger\n  window.graph.ready(() => {\n    // $(\"#trigger-help\").on(\"click\", () => window.graph.help()); // bind nav bar help button to the GraphAPI help menu\n    ready_callback(window.graph);\n  });\n}\n\n// Triples graph\nfunction triples_configuration(graph) {\n  window.graph.node_display(triples_node_data, \"30em\", \"30em\");\n  window.graph.edge_display(triples_edge_data, \"30em\", \"30em\");\n  window.graph.popup_display(triples_legend, \"Legend\", \"30em\", \"30em\");\n  //graph.add_node_menu_item(\"Add Connections\", \"Search for more connections to this topic\", add_topic_connections)\n}\n\nfunction triples_node_data(container, node) {\n  let html = `<h4>${node.label}</h4>`;\n  if (node.tree) {\n    html += \"<p class='fst-italic'>(double-click to expand)</p>\";\n  } else {\n    var time = new Date(node.data.time * 1000); // earliest date\n    let topics = [];\n    let definitions = [];\n    for (let [key, val] of Object.entries(node.data)) {\n      if (val && key.toLowerCase().includes(\"topic-\")) {\n        topics.push(val);\n      }\n      if (val && key.toLowerCase().includes(\"definition-\")) {\n        definitions.push(val);\n      }\n    }\n\n    let def_html = \"\";\n    for (let i = 0; i < topics.length; i++) {\n      let t = topics[i];\n      let d = definitions[i] || NA;\n      def_html += `<p><span class=\"fw-bold\">${t}:</span> <span>${d}</span></p>`;\n    }\n\n    html += `\n            <p>\n                Topics: ${topics.join(\", \")} <br>\n                Earliest Date: ${time.toUTCString()}\n            </p>\n            ${node_statistics(node)}\n            <hr>\n            ${def_html}\n        `;\n  }\n\n  $(container).html(html); // set html of the container\n}\n\nfunction triples_edge_data(container, edge, source, target) {\n  if (edge.tree) {\n    // TODO display list of papers\n    return false; // don't show the popup\n  }\n\n  let time;\n  if (edge.data.time) time = new Date(edge.data.time * 1000).toUTCString();\n  else time = NA;\n  let title = edge.data.title;\n  if (edge.data.doi) title = link(edge.data.title, edge.data.doi);\n\n  let abstract = edge.data.abstract || NA;\n  // Highlight the sentence in the abstract where this triple came from\n  if (edge.data.abstract) {\n    let highlighted = \"\";\n    let start = edge.data.start_char;\n    let end = edge.data.end_char;\n    highlighted = abstract.slice(0, start);\n    highlighted += `<mark>${abstract.slice(start, end)}</mark>`;\n    highlighted += abstract.slice(end, abstract.length);\n    abstract = highlighted;\n  }\n\n  let html = `\n        <p>\n            <span class=\"fw-bold\">Finding: </span>\"...${\n              edge.data.triple\n            }...\" <br>\n            <hr>\n            <span class=\"fw-bold\">Article:</span> ${title} <br>\n            <span class=\"fw-bold\">Published:</span> ${time} <br>\n            <span class=\"fw-bold\">PMID:</span> ${edge.data.pmid} <br>\n            <span class=\"fw-bold\">Journal:</span> ${\n              edge.data.journal_title\n            } <br>\n            <span class=\"fw-bold\">Citations:</span> ${edge.data.citations} <br>\n            <span class=\"fw-bold\">Authors:</span> ${edge.data.authors} <br>\n        </p>\n        ${edge_statistics(edge)}\n        <hr>\n        <span class=\"fw-bold\">Abstract:</span>\n        <p class=\"fs-6\">${abstract}</p>\n    `;\n\n  $(container).html(html); // set html of container\n\n  // trigger center modal with triple display on button click\n  $(container)\n    .find(\".view-triples\")\n    .click(() => {\n      show_triples_popup(edge, source, target);\n    });\n}\n\nfunction show_triples_popup(data, source, target) {\n  let $iframe = paper_info_iframe(data.data.pmid);\n  window.graph.center_display(\"\", \"\", \"\", 3, (container) => {\n    // trigger the graphAPI center display\n    $(container).append($iframe);\n  });\n}\n\nfunction triples_legend(container) {\n  $(container).parent().parent().prev().click()  // click the legend button\n  let umls_link = link(\n    \"UMLS\",\n    \"https://www.nlm.nih.gov/research/umls/index.html\"\n  );\n\n  $(container).html(`\n        <h4 class=\"fw-bold\">Nodes:</h4>\n        <ul>\n            <li>Nodes represent noun-phrases extracted from scientific abstracts related to your search terms.</li>\n            <li>Node colors differentiate topical clusters.</li>\n            <li>Node size corresponds to the number of attached edges.</li>\n            <li>Click a node to see the ${umls_link} concepts and definitions within the corresponding noun phrase.</li>\n        </ul>\n        <h4 class=\"fw-bold\">Edges:</h4>\n        <ul>\n            <li>Edges represent relationships extracted from scientific abstracts that connect two noun-phrases.</li>\n            <li>Edge thickness corresponds to the number of citations that paper has.</li>\n            <li>Click an edge to view the scientific abstract the relationship was extracted from.</li>\n            <li>Edges are colored according to the type of relationship:<br>\n                <span style=\"color: blue;\">Blue = Positive</span><br>\n                <span style=\"color: red;\">Red = Negative</span><br>\n                <span style=\"color: black;\">Black = Associative</span>\n            </li>\n        </ul>\n    `);\n}\n\n// Citation graph\nfunction citation_configuration(graph) {\n  window.graph.node_display(citations_node_data, \"30em\", \"30em\");\n  window.graph.popup_display(citations_legend, \"Legend\");\n}\n\nfunction citations_node_data(container, node) {\n  let title = node.data.title || NA;\n  if (node.data.doi) title = link(node.data.title, node.data.doi);\n\n  let time;\n  if (node.data.time) time = new Date(node.data.time * 1000).toUTCString();\n  else time = NA;\n\n  let html = `\n    <p>${title}</p><hr>\n    <p>\n        <span class=\"fw-bold\">Published:</span> ${time}<br>\n        <span class=\"fw-bold\">Journal:</span> ${\n          node.data.journal_title || NA\n        }<br>\n        <span class=\"fw-bold\">Authors:</span> ${node.data.authors || NA}<br>\n    </p>\n    ${node_statistics(node)}\n    <hr>\n    <span class=\"fw-bold\">Abstract:</span>\n    <p>${node.data.abstract || NA}</p>\n    `;\n  $(container).html(html);\n}\n\nfunction citations_edge_data(container, edge) {}\n\nfunction citations_legend(container) {\n  $(container).parent().parent().prev().click()  // click the legend button\n  $(container).html(`\n        <h4 class=\"fw-bold\">Nodes:</h4>\n        <ul>\n            <li>Each <span style=\"color: red;\">Red</span> node is a published paper relating to your search terms</li>\n            <li>Each <span style=\"color: orange;\">Orange</span> node is a published paper that cites any of the papers you searched for</li>\n            <li>Click a node to view the publication information.</li>\n        </ul>\n        <h4 class=\"fw- bold\">Edges:</h4>\n        <ul>\n            <li>Each edge represents a citation between papers.</li>\n        </ul>\n        `);\n}\n\n// Topic Co-occurrences graph\nfunction co_occurrences_configuration(graph) {\n  window.graph.node_display(topic_co_occurrences_node_data, \"30em\", \"30em\");\n  window.graph.edge_display(topic_co_occurrences_edge_data, \"30em\", \"30em\");\n  window.graph.popup_display(\n    topic_co_occurrences_legend,\n    \"Legend\",\n    \"30em\",\n    \"30em\"\n  );\n  window.graph.add_node_menu_item(\n    \"See More\",\n    \"Search for more connections to this topic\",\n    add_co_occurrence_connections\n  );\n}\n\nfunction topic_co_occurrences_node_data(container, node) {\n  let total = node.data.total.toLocaleString(\"en-US\");\n  let perc = display_percentile(node.data.percentile)\n  let cat = node.data.category\n  let definition = node.data.definition || NA;\n  let start_date = node.data.start_date\n  let end_date = node.data.end_date\n\n  $(container).html(`\n        <h4>${node.label}</h4>\n        <span class=\"fw-bold\">Category:</span> ${cat}<br>\n        <p>\n          <hr>\n          From ${start_date} - ${end_date}, this topic appeared <span class=\"fw-bold\">${total}</span> times, which is more than\n          approximately <span class=\"fw-bold\">${perc}%</span> of all topics.\n          <hr>\n          <span class=\"fw-bold\">Definition:</span><br>\n          ${definition}\n          ${node_statistics(node)}\n        </p>\n    `);\n\n  // trigger center modal when clicked\n  $(container)\n    .find(\"#paper-list-modal\")\n    .click(() => {\n      paper_list_button(node);\n    });\n\n  // TODO eventually show a line/bar chart of how frequently this topic occurred in papers over time.\n}\n\nfunction topic_co_occurrences_edge_data(container, edge, source, target) {\n  // TODO: eventually display a line chart here to show the change in co-occurrences over time\n  // Right now we only calculate this at two points in time, but when we add more this will be useful.\n  let total = (edge.data.total).toLocaleString(\"en-US\");\n  let freq_perc = display_percentile(edge.data.frequency_percentile)\n  let change_prop = Math.abs(edge.data.delta.toFixed(1)).toLocaleString(\"en-US\");\n  let change_perc = display_percentile(edge.data.delta_percentile)\n  let change_word = edge.data.delta > 0 ? \"increased\" : \"decreased\"\n  let start_date = edge.data.start_date\n  let end_date = edge.data.end_date\n\n  $(container).html(`\n        <h4>\n            ${source.label} <br>\n            and <br>\n            ${target.label}\n        </h4>\n        <p>\n            <hr>\n            From ${start_date} - ${end_date}, this pair of topics appeared together in <span class=\"fw-bold\">${total}</span> publications,\n            which is more than <span class=\"fw-bold\">${freq_perc}%</span> of all topic pairs. Over this time period, the frequency of this topic pair\n            has <span class=\"fw-bold\">${change_word}</span> by <span class=\"fw-bold\">${change_prop}%</span>,\n            which is more than <span class=\"fw-bold\">${change_perc}%</span> of all topic pairs.\n        </p>\n    `);\n\n  // trigger center modal when clicked\n  // $(container)\n  //   .find(\"#paper-list-modal\")\n  //   .click(() => {\n  //     paper_list_button(edge, source, target);\n  //   });\n}\n\nfunction paper_list_button(data, source, target) {\n  let topics = [];\n  if (source && target) {\n    // edge\n    topics = [source.label, target.label];\n  } else {\n    // node\n    topics = [data.label];\n  }\n\n  let query_string = \"?\";\n  for (let topic of topics) {\n    query_string = query_string + \"&topics=\" + topic;\n  }\n\n  start_loading();\n  $.ajax({\n    method: \"GET\",\n    url: \"/quick_search_papers_by_mesh_topic\" + query_string,\n    dataType: \"json\",\n    success: (data) => {\n      show_paper_list(data, topics);\n      stop_loading();\n    },\n    error: (e) => {\n      console.log(\"Failed to request paper list\");\n      stop_loading();\n    },\n  });\n}\n\nfunction show_paper_list(paper_list, topics) {\n  let html = `\n        <table class=\"table\">\n        <tr>\n            <th>Cited</th>\n            <th>Title</th>\n            <th>Triples</th>\n        </tr>\n    `;\n  for (let paper of paper_list) {\n    let title = paper.title;\n    if (paper.doi) title = link(paper.title, paper.doi);\n\n    let triple_button = NA;\n    if (paper.triple)\n      triple_button = `<a class=\"btn btn-sm btn-success\" data-pmid=\"${paper.pmid}\">View Triples</a>`;\n\n    html += `\n        <tr>\n            <td>${paper.citations || 0}</td>\n            <td class=\"fw-bold\">${title}</td>\n            <td>${triple_button}</td>\n        </tr>\n        `;\n  }\n  html += \"</table>\";\n\n  for (let i = 0; i < topics.length; i++) {\n    topics[i] = `\"${topics[i]}\"`;\n  }\n  let modal_title = \"Publications on topics: \" + topics.join(\", \");\n\n  // trigger the graphAPI center display\n  window.graph.center_display(modal_title, html, \"\", 2, (container) => {\n    let $buttons = $(container).find(\"a.btn[data-pmid]\");\n    for (let button of $buttons) {\n      // get all buttons with a pmid data attribute\n      let $button = $(button);\n      let pmid = $button.data(\"pmid\");\n      $button.click(() => {\n        // on click, call the modal containing the Paper Info iframe.\n        let $iframe = paper_info_iframe(pmid);\n        start_loading();\n        $iframe.find(\"iframe\").on(\"load\", stop_loading);\n        window.graph.center_display(\"\", \"\", \"\", 3, (container) => {\n          let $container = $(container);\n          $iframe.appendTo($container);\n        });\n      });\n    }\n  });\n}\n\nfunction topic_co_occurrences_legend(container) {\n  $(container).parent().parent().prev().click()  // click the legend button\n  let mesh_link = link(\n    \"Medical Subject Headings (MeSH)\",\n    \"https://www.nlm.nih.gov/mesh/meshhome.html\"\n  );\n\n  const dirtyHTML = `\n        <p>\n            This plot compares research topic connectivity over recent months.\n            The topics shown are ${mesh_link} developed by the NIH.\n        </p>\n        <h4 class=\"fw-bold\">Nodes:</h4>\n        <ul>\n            <li>Each node represents a research topic.</li>\n            <li>Node size corresponds to the total number of times that topic occurred in the literature in recent months.</li>\n            <li>Node color corresponds to the high-level MeSH term category:<br>\n                <span style=\"color: #a6d75b;\">Diseases</span>,\n                <span style=\"color: #24a824;\">Organisms</span>,\n                <span style=\"color: #2e9e84;\">Anatomy</span>,\n                <span style=\"color: #54bebe;\">Humanities</span>,\n                <span style=\"color: #007399;\">Human Groups</span>,\n                <span style=\"color: #005df9;\">Social Phenomena</span>,\n                <span style=\"color: #1a8cdd;\">Psychiatry and Psychology</span>,\n                <span style=\"color: #8184fb;\">Phenomena and Processes</span>,\n                <span style=\"color: #766aaf;\">Techniques and Equipment</span>,\n                <span style=\"color: #ab3da9;\">Chemicals and Drugs</span>,\n                <span style=\"color: #d65c81;\">Health Care</span>,\n                <span style=\"color: #fe5a01;\">Information Science</span>,\n                <span style=\"color: #eeb711;\">Technology, Industry, and Agriculture</span>,\n                <span style=\"color: #ece000;\">Disciplines and Occupations</span>,\n                <span style=\"color: #814a0c;\">Geographicals</span>,\n                <span style=\"color: #503f3f;\">Other</span>.\n            </li>\n        </ul>\n        <h4 class=\"fw-bold\">Edges:</h4>\n        <ul>\n            <li>Each edge means that the connected topics both appeared in the same published papers.</li>\n            <li>Edge thickness corresponds to how frequently this co-occurrence was found in recent months, relative to other edges.</li>\n            <li>Edges are colored by whether this co-occurrence increased or decreased in recent months, relative to other edges.<br>\n                <span style=\"color: #5370c6;\">Blue = Increase</span><br>\n                <span style=\"color: #cf1717\";\">Red = Decrease</span><br>\n                <span style=\"color: grey;\">Grey = Relatively Little Change</span>\n            </li>\n        </ul>\n    `;\n  const sanitize = DOMPurify.sanitize(dirtyHTML);\n  $(container).html(sanitize);\n}\n\nfunction add_co_occurrence_connections(node) {\n  // Add more connections to this node\n  let n = 10; // how many to add\n  let start = window.extra_map[node.key] || 0; // gets starting index\n  window.extra_map[node.key] = start + n; // increment\n  console.log(node.key)\n\n  $.ajax({\n    method: \"GET\",\n    url: `/graph/command/extra_topic_co_occurrences?topic=${node.label}&start=${start}&num=${n}`,\n    dataType: \"json\",\n    success: (data) => {\n      if (data.nodes.length) {\n        // spread out the new nodes around the selected one\n        let positions = [];\n        let angle = (2 * Math.PI) / data.nodes.length; // angle to spread out by\n        let i = 0;\n        for (let new_node of data.nodes) {\n          new_node.x = node.x + node.size * Math.cos(angle * i);\n          new_node.y = node.y + node.size * Math.sin(angle * i);\n          i++;\n        }\n      }\n\n      if (data.nodes.length || data.edges.length) {\n        window.graph.add(data);\n      } else {\n        window.graph.warning(\n          \"No data found\",\n          \"No more co-occurrences were found within your search constraints..\"\n        );\n      }\n    },\n    error: (e) => {\n      window.graph.warning(\"Error retrieving co-occurrence data\", e);\n    },\n  });\n}\n","import $ from \"jquery\";\nimport { Box } from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\n\nimport useCurrentVisualizer from \"../../../../hooks/useCurrentVisualizer\";\nimport { gray50 } from \"../../../../../../setup/theme/colors\";\nimport { configure_graph } from \"./graphAPIUtils\";\n\nconst GraphAPI = () => {\n  const { curVisualizer } = useCurrentVisualizer();\n\n  useEffect(() => {\n    configure_graph(curVisualizer.data, curVisualizer.representation);\n\n    const timer = setTimeout(() => {\n      // * Changing background color to light gray\n      $(\"iframe\")\n        .contents()\n        .find(\"#sigma-container\")\n        .css({ backgroundColor: gray50 });\n      document.body.style.backgroundColor = gray50;\n    }, 300);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [curVisualizer.data, curVisualizer.representation]);\n\n  return <Box id=\"graphAPI-container\" w=\"100vw\" height=\"95%\" zIndex={-1}></Box>;\n};\n\nexport default GraphAPI;\n","import { DownloadIcon, SettingsIcon } from \"@chakra-ui/icons\";\nimport {\n  IconButton,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/react\";\nimport { useAppSelector } from \"../../../../../../store/hooks\";\nimport { Tooltip } from \"@chakra-ui/react\";\n\nconst VisualizerSettings = () => {\n  const curVisualizer = useAppSelector((state) => state.visualizer);\n\n  const handleDownloadZip = () => {\n    var a = document.createElement(\"a\");\n    a.href = \"data:application/octet-stream;base64,\" + curVisualizer.zip_data;\n    a.download = \"BRAINWORKS.zip\";\n    a.click();\n  };\n\n  return (\n    <Menu>\n      <Tooltip hasArrow label=\"Settings\" color=\"white\">\n        <MenuButton\n          as={IconButton}\n          aria-label=\"Options\"\n          icon={<SettingsIcon />}\n          variant=\"ghost\"\n        />\n      </Tooltip>\n      <MenuList>\n        <MenuItem icon={<DownloadIcon />} onClick={handleDownloadZip}>\n          Download ZIP\n        </MenuItem>\n      </MenuList>\n    </Menu>\n  );\n};\n\nexport default VisualizerSettings;\n","import { Box, Divider, Heading, HStack, Link } from \"@chakra-ui/react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport LogoWithText from \"../../../../../../common/components/LogoWithText\";\nimport useCurrentVisualizer from \"../../../../hooks/useCurrentVisualizer\";\nimport VisualizerSettings from \"./VisualizerSettings\";\nimport { Tooltip } from \"@chakra-ui/react\";\nimport { findVisualizerInfo } from \"../../../../utils\";\n\nconst VisualizerNavigation = () => {\n  const { curVisualizer } = useCurrentVisualizer();\n  const visualizerInfo = findVisualizerInfo(curVisualizer.representation);\n\n  return (\n    <Box as=\"nav\" h=\"5%\" zIndex={100}>\n      <HStack\n        align=\"center\"\n        h=\"100%\"\n        py={2}\n        px={3}\n        w=\"100%\"\n        bg=\"white\"\n        justify=\"space-between\"\n      >\n        <HStack>\n          <Tooltip hasArrow label=\"Back to visualizer selections\" color=\"white\">\n            <Link as={RouterLink} to=\"/visualizers\">\n              <LogoWithText />\n            </Link>\n          </Tooltip>\n          <Tooltip hasArrow label=\"Current visualizer\" color=\"white\">\n            <Heading size=\"xs\" px={3} fontWeight={400} color=\"gray.600\">\n              {visualizerInfo?.title}\n            </Heading>\n          </Tooltip>\n        </HStack>\n        <VisualizerSettings />\n      </HStack>\n      <Divider />\n    </Box>\n  );\n};\n\nexport default VisualizerNavigation;\n","import { Text, Tooltip } from \"@chakra-ui/react\";\nimport { brand100 } from \"../../../../../../setup/theme/colors\";\n\ninterface AppProps {\n  def?: string;\n  text: string;\n}\n\nconst TableFragment = ({ def, text }: AppProps) => {\n  return (\n    <Tooltip hasArrow label={def} color=\"white\" isDisabled={!def}>\n      <Text as=\"span\" bg={def ? brand100 : \"\"} ml={1}>\n        {text}\n      </Text>\n    </Tooltip>\n  );\n};\n\nexport default TableFragment;\n","import {\n  Box,\n  Button,\n  Divider,\n  Heading,\n  HStack,\n  Link,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { useMemo, useState } from \"react\";\n\nimport useCurrentVisualizer from \"../../../../hooks/useCurrentVisualizer\";\n\nconst MAX_AUTHORS_SHOWN = 3;\n\nconst PaperInfo = () => {\n  const [expand, setExpand] = useState(false);\n  const { curVisualizer } = useCurrentVisualizer();\n\n  const { doi, pub_title, pub_date, pmid, authors, projects } = curVisualizer.data.paper;\n\n  const handleAuthorToggle = () => {\n    setExpand((prevState) => {\n      return !prevState;\n    });\n  };\n\n  // * Show minimum amount of authors before expansion\n  const minAuthors = useMemo(() => {\n    const authorArr = authors.split(\",\");\n    let shownAuthors = authors;\n    if (authorArr.length > MAX_AUTHORS_SHOWN) {\n      shownAuthors = authorArr\n        .slice(0, MAX_AUTHORS_SHOWN)\n        .join(\", \")\n        .concat(\"...\");\n    }\n    return shownAuthors;\n  }, [authors]);\n\n  return (\n    <VStack w=\"100%\" align=\"flex-start\" spacing={5}>\n      <Link\n        color={\"blue.500\"}\n        href={doi}\n        isExternal\n        w=\"100%\"\n        textAlign=\"center\"\n      >\n        <Heading size={\"sm\"}>{pub_title}</Heading>\n      </Link>\n      <HStack>\n        <Heading fontSize={\"sm\"}>Published</Heading>\n        <Text> {pub_date}</Text>\n      </HStack>\n      {/* PMID */}\n      <HStack>\n        <Heading fontSize={\"sm\"}>PMID</Heading>\n        <Text> {pmid}</Text>\n      </HStack>\n      {/* Projects */}\n        {projects &&\n        <HStack>\n            <Heading fontSize={\"sm\"}>Projects</Heading>\n            <Text> {projects}</Text>\n        </HStack>\n        }\n      {/* Authors */}\n      <VStack align=\"flex-start\">\n        <HStack>\n          <Heading fontSize={\"sm\"}>Authors</Heading>{\" \"}\n          <Button size=\"xs\" variant=\"outline\" onClick={handleAuthorToggle}>\n            {expand ? \"Show less\" : \"Show more\"}\n          </Button>\n        </HStack>\n        <Box borderColor={\"gray.500\"} textAlign={\"left\"}>\n          <Text>{expand ? authors : minAuthors}</Text>\n        </Box>\n      </VStack>\n      <Divider />\n    </VStack>\n  );\n};\n\nexport default PaperInfo;\n","import {\n  Box,\n  Container,\n  Heading,\n  Highlight,\n  HStack,\n  Table,\n  TableContainer,\n  Tbody,\n  Td,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { useMemo, useState } from \"react\";\n\nimport useCurrentVisualizer from \"../../../../hooks/useCurrentVisualizer\";\nimport TableFragment from \"./TableFragment\";\nimport { brand100 } from \"../../../../../../setup/theme/colors\";\nimport { createTriplesTable } from \"../../../../utils\";\nimport PaperInfo from \"./PaperInfo\";\n\nconst PaperTriples = () => {\n  const { curVisualizer } = useCurrentVisualizer();\n  const [highlight, setHighlight] = useState(-1);\n\n  const { triples, paper } = curVisualizer.data;\n\n  const triplesTableData = useMemo(() => {\n    return createTriplesTable(triples);\n  }, [triples]);\n\n  return (\n    <HStack align=\"center\" h=\"95%\" justify=\"space-around\">\n      {/* Triples Table */}\n      <VStack w=\"40%\" align=\"flex-start\" spacing={5}>\n        <TableContainer\n          bg=\"white\"\n          maxH=\"90vh\"\n          boxShadow=\"lg\"\n          overflowY=\"auto\"\n          p={5}\n          borderRadius=\"lg\"\n        >\n          <Table variant=\"simple\" size=\"xs\" fontSize=\"xs\">\n            <Thead>\n              <Tr>\n                <Th>Subject</Th>\n                <Th mr={3}>Relation</Th>\n                <Th>Object</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {/* Triple sentence */}\n              {triplesTableData.map((triple: any, tripleNum: number) => (\n                <Tr\n                  bg={highlight === tripleNum ? \"gray.300\" : \"\"}\n                  key={`triple${tripleNum}`}\n                  onClick={() => {\n                    document\n                      .querySelector(triple.target)\n                      .scrollIntoView({ behavior: \"smooth\" });\n                  }}\n                  onMouseEnter={() => {\n                    setHighlight(tripleNum);\n                  }}\n                  onMouseLeave={() => {\n                    setHighlight(-1);\n                  }}\n                >\n                  {/* Object fragments */}\n                  <Td>\n                    {triple.subFrags.map((obj: any) => (\n                      <TableFragment text={obj?.text} def={obj?.def} />\n                    ))}\n                  </Td>\n                  <Td>{triple.relation}</Td>\n                  <Td>\n                    {triple.objFrags.map((obj: any) => (\n                      <TableFragment text={obj?.text} def={obj?.def} />\n                    ))}\n                  </Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </Table>\n        </TableContainer>\n      </VStack>\n      {/* Abstract */}\n      <Container\n        maxW=\"3xl\"\n        fontSize=\"xs\"\n        bg=\"white\"\n        h=\"90vh\"\n        boxShadow=\"lg\"\n        overflowY=\"auto\"\n        p={10}\n      >\n        <VStack align=\"flex-start\" spacing={5}>\n          <PaperInfo />\n          <Heading size=\"md\">Abstract</Heading>\n          <Box>\n            {paper.abstract.map((sentence: any) => {\n              const text = sentence[0];\n              // * If section has 2nd item, an associated triples exist\n              if (sentence[1] !== undefined) {\n                const tripleNum = sentence[1];\n                return (\n                  <Box\n                    bg={highlight === tripleNum ? \"gray.300\" : \"\"}\n                    as=\"span\"\n                    data-index={tripleNum}\n                    onMouseEnter={() => {\n                      setHighlight(tripleNum);\n                    }}\n                    onMouseLeave={() => {\n                      setHighlight(-1);\n                    }}\n                    key={`triple${tripleNum}`}\n                  >\n                    <Highlight\n                      query={[\n                        triples[tripleNum].object,\n                        triples[tripleNum].relation,\n                        triples[tripleNum].subject,\n                      ]}\n                      styles={{ bg: brand100 }}\n                    >\n                      {text}\n                    </Highlight>\n                  </Box>\n                );\n              }\n              return <Text display=\"inline\">{text}</Text>;\n            })}\n          </Box>\n        </VStack>\n      </Container>\n    </HStack>\n  );\n};\n\nexport default PaperTriples;\n","import { Box, Heading, HStack } from \"@chakra-ui/react\";\n\nimport ReactChart from \"../../../../../../common/components/Charts/ReactChart\";\nimport { brand300a, brand400 } from \"../../../../../../setup/theme/colors\";\n\ninterface AppProps {\n  label: string;\n  data: number[];\n  years: number[];\n  triples: string[];\n}\n\nconst TripleTimeline = ({ triples, label, data, years }: AppProps) => {\n  return (\n    <HStack align=\"center\" w=\"100%\">\n      {/* Label of item */}\n      <Heading\n        fontSize=\"xs\"\n        fontWeight={400}\n        w={150}\n        style={{ hyphens: \"auto\" }}\n        pl={3}\n      >\n        {label}\n      </Heading>\n      {/* Frequency */}\n      <Box w=\"100%\" h={triples.length < 10 ? 200 : 50}>\n        <ReactChart\n          chartXAxis={years}\n          chartDatasets={[\n            {\n              label: label,\n              data: data,\n              borderColor: brand400,\n              backgroundColor: brand300a,\n              fill: true,\n              tension: 0.1,\n            },\n          ]}\n          chartType={\"line\"}\n          chartOptions={{\n            plugins: {\n              legend: {\n                display: false,\n              },\n              tooltip: {\n                caretSize: 0,\n              },\n            },\n            scales: {\n              x: {\n                ticks: {\n                  display: false,\n                },\n                grid: {\n                  display: false,\n                  drawBorder: false,\n                },\n              },\n              y: {\n                ticks: {\n                  display: false,\n                },\n                gridLines: {\n                  display: true,\n                  drawOnChartArea: false,\n                  drawTicks: false,\n                },\n                grid: {\n                  display: false,\n                  drawBorder: false,\n                },\n              },\n            },\n          }}\n        />\n      </Box>\n    </HStack>\n  );\n};\n\nexport default TripleTimeline;\n","import { Box, Divider, Heading, HStack, Stack, VStack } from \"@chakra-ui/react\";\nimport { faker } from \"@faker-js/faker\";\nimport ReactChart from \"../../../../../../common/components/Charts/ReactChart\";\nimport TripleTimeline from \"./FrequencyTimeline\";\n\nconst FrequencyTimelines = () => {\n  // * Generate random dataset\n  // * Generate years & triple timeline\n  const num_data = 40;\n\n  let years: number[] = [];\n  let triples: string[] = [];\n  let timelines: any = [];\n  let start = 1980;\n  for (let i = 0; i < num_data; i++) {\n    let timeline: any = { label: start.toString(), data: [] };\n    years[i] = start;\n    for (let i = 0; i < num_data; i++) {\n      timeline.data[i] = Math.floor(Math.random() * 100);\n    }\n    start++;\n    timelines[i] = timeline;\n    triples[i] = faker.random.words();\n  }\n\n  let random: any = {\n    itemLabel: \"Triples\",\n    timelineLabel: \"Frequency timeline\",\n    years: years,\n    timelines: timelines,\n    triples: triples,\n  };\n  console.log(random);\n\n  return (\n    <Box h=\"100vh\">\n      <Stack w=\"100%\" h=\"100%\" justify=\"center\" align=\"center\">\n        {/* Timeline labels */}\n        <VStack\n          spacing={0}\n          align=\"flex-start\"\n          w=\"90vw\"\n          overflowX=\"auto\"\n          h={triples.length <= 3 ? \"auto\" : \"90%\"}\n          pt={5}\n          boxShadow=\"lg\"\n          borderRadius=\"lg\"\n          bg=\"white\"\n          m={50}\n        >\n          {/* Labels */}\n          <HStack w=\"100%\" pb={5}>\n            <Heading fontSize=\"sm\" w=\"150px\" pl={3}>\n              {random.itemLabel}\n            </Heading>\n            <Heading fontSize=\"sm\">\n              {random.timelineLabel} ({years[0]} - {years[years.length - 1]})\n            </Heading>\n          </HStack>\n          {/* Determine length based on minimum number of years  */}\n          <Box\n            w={years.length < 30 ? \"100%\" : years.length * 50}\n            overflowX=\"scroll\"\n          >\n            <Divider />\n            {/* Empty chart to display years, very hacky */}\n            <Box h=\"65px\" pt=\"15px\" pl=\"150px\" bg=\"gray.50\" pos=\"sticky\">\n              <ReactChart\n                chartXAxis={years}\n                chartDatasets={[]}\n                chartType={\"line\"}\n                chartOptions={{\n                  scales: {\n                    x: {\n                      position: \"top\",\n                      ticks: {\n                        display: true,\n                      },\n                      grid: {\n                        display: false,\n                        drawBorder: false,\n                      },\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                  },\n                }}\n              />\n            </Box>\n            <Divider />\n            {/* Timeline rows */}\n            <VStack h=\"90%\" w=\"100%\">\n              {timelines.map((_timeline: any, i: number) => {\n                return (\n                  <>\n                    <TripleTimeline\n                      triples={triples}\n                      label={triples[i]}\n                      data={timelines[i].data}\n                      years={years}\n                    />\n                    {i < timelines.length - 1 && <Divider />}\n                  </>\n                );\n              })}\n            </VStack>\n          </Box>\n        </VStack>\n      </Stack>\n    </Box>\n  );\n};\nexport default FrequencyTimelines;\n","import { ReactNode, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport useGlobalAlert from \"../../../../../../common/hooks/useGlobalAlert\";\nimport GraphAPI from \"../../visualizers/GraphAPI\";\nimport usePageTitle from \"../../../../../../common/hooks/usePageTitle\";\nimport VisualizerNavigation from \"./VisualizerNavigation\";\nimport { useAppSelector } from \"../../../../../../store/hooks\";\nimport { Box } from \"@chakra-ui/react\";\nimport PaperTriples from \"../../visualizers/PaperTriples\";\nimport FrequencyTimelines from \"../../visualizers/FrequencyTimelines\";\n\n// * Dictionary determines which visualizer component should render based on type\nconst VISUALIZERS: { [visualizer: string]: ReactNode } = {\n  triples: <GraphAPI />,\n  topic_co_occurrences: <GraphAPI />,\n  paper_citations: <GraphAPI />,\n  paper_triples: <PaperTriples />,\n  frequency_timelines: <FrequencyTimelines />,\n};\n\n/**\n * VisualizerRouter\n */\nconst VisualizerRouter = () => {\n  const navigate = useNavigate();\n  const curVisualizer = useAppSelector((state) => state.visualizer);\n  const { showGlobalAlert } = useGlobalAlert();\n  usePageTitle(\"Editor\");\n\n  useEffect(() => {\n    // * If visualizer component is not found, navigate back to the home page\n    if (\n      curVisualizer?.representation === undefined ||\n      VISUALIZERS[curVisualizer?.representation] === undefined\n    ) {\n      showGlobalAlert(\n        \"Error\",\n        \"Your visual could not be found. Please try again.\",\n        \"error\",\n        5000\n      );\n      navigate(\"/test\");\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [curVisualizer?.representation]);\n\n  return (\n    <Box h=\"100vh\">\n      <VisualizerNavigation />\n      {VISUALIZERS[curVisualizer?.representation]}\n    </Box>\n  );\n};\n\nexport default VisualizerRouter;\n","import { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport useAPIDataAlert from \"../../../common/hooks/useAPIDataAlert\";\nimport LoadingVisualScreen from \"./components/manage/LoadingVisualScreen\";\nimport VisualizerRouter from \"./components/manage/VisualizerRouter\";\nimport useCurrentVisualizer from \"../hooks/useCurrentVisualizer\";\nimport useAxiosWrapper from \"common/hooks/useAxiosWrapper\";\nimport useGlobalAlert from \"common/hooks/useGlobalAlert\";\n\n/**\n *\n */\nconst VisualizerEditor = () => {\n  const navigate = useNavigate();\n  const { getAxios: getToolData } = useAxiosWrapper({\n    url: `visualizer-editor`,\n    method: \"GET\",\n  });\n\n  const { apiDataAlerter } = useAPIDataAlert();\n  const { setCurrentVisualizer } = useCurrentVisualizer();\n  const [loading, setLoading] = useState(true);\n  const { showGlobalAlert } = useGlobalAlert();\n\n  useEffect(() => {\n    const buildVisual = async () => {\n      const { data } = await getToolData();\n      apiDataAlerter({\n        data: data,\n        onSuccess: () => {\n          setCurrentVisualizer(data.success);\n          setLoading(false);\n        },\n        onFailure: () => {\n          navigate(\"/\");\n        },\n      });\n    };\n    try {\n      buildVisual();\n    } catch {\n      showGlobalAlert(\n        \"Something went wrong!\",\n        \"The request to create your visual could not send.\"\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <>{loading ? <LoadingVisualScreen /> : <VisualizerRouter />}</>;\n};\n\nexport default VisualizerEditor;\n"],"names":["chartXAxis","chartDatasets","chartOptions","chartType","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","ArcElement","PointElement","LineElement","BarController","PieController","LineController","TimeScale","reactChartOptions","barChartOptions","scales","y","ticks","precision","options","responsive","maintainAspectRatio","tooltips","position","data","labels","datasets","type","showGlobalAlert","useGlobalAlert","useGlobalFormik","formikSlice","newCaptcha","standardAlertError","apiDataAlerter","onSuccess","successMsg","onFailure","failureMsg","containsSuccess","success","containsError","error","captcha","img","length","tryCatchWrapper","func","globalAlert","useAppSelector","state","alert","dispatch","useAppDispatch","toast","useToast","title","desc","status","duration","showAlert","description","undefined","isClosable","hideGlobalAlert","hideAlert","formik","useAxios","url","API_URL","withCredentials","manual","getNewCaptcha","setCaptcha","audio","setNewCaptcha","setFormik","key","fieldsInfo","loading","setFormikSlice","resetGlobalFormik","resetFormikSlice","obj","hasOwnProperty","findMatch","text","which","arr","toLowerCase","start","end","candidate_index","mid","Math","floor","elem","substr","matchItems","matches","slice","sort","a","b","getFieldInfo","property","filter","item","shift","usePageTitle","w","h","justify","spacing","PageHeader","subTitle","color","size","setCurrentVisualizer","setVisualizerData","curVisualizer","visualizer","NA","start_loading","$","show","stop_loading","hide","display_percentile","num","max","min","toFixed","toLocaleString","link","_class","trim","paper_info_iframe","pmid","node_statistics","node","degree","degree_centrality","closeness_centrality","triples_configuration","graph","window","node_display","triples_node_data","edge_display","triples_edge_data","popup_display","triples_legend","container","html","label","tree","time","Date","topics","definitions","Object","entries","val","includes","push","def_html","i","t","d","join","toUTCString","edge","source","target","doi","abstract","highlighted","start_char","end_char","triple","journal_title","citations","authors","simmelian_strength","edge_statistics","find","click","$iframe","center_display","append","show_triples_popup","parent","prev","umls_link","citation_configuration","citations_node_data","citations_legend","co_occurrences_configuration","topic_co_occurrences_node_data","topic_co_occurrences_edge_data","topic_co_occurrences_legend","add_node_menu_item","add_co_occurrence_connections","total","perc","percentile","cat","category","definition","start_date","end_date","query_string","method","dataType","paper_list","paper","triple_button","modal_title","$buttons","button","$button","on","$container","appendTo","show_paper_list","e","console","log","paper_list_button","freq_perc","frequency_percentile","change_prop","abs","delta","change_perc","delta_percentile","change_word","mesh_link","dirtyHTML","sanitize","DOMPurify","extra_map","nodes","angle","PI","new_node","x","cos","sin","edges","add","warning","useCurrentVisualizer","useEffect","representation","ready_callback","gravity","Graph","ready","configure_graph","timer","setTimeout","contents","css","backgroundColor","gray50","document","body","style","clearTimeout","id","height","zIndex","hasArrow","as","IconButton","icon","variant","onClick","createElement","href","zip_data","download","visualizerInfo","findVisualizerInfo","align","py","px","bg","RouterLink","to","LogoWithText","fontWeight","def","isDisabled","brand100","ml","useState","expand","setExpand","pub_title","pub_date","projects","minAuthors","useMemo","authorArr","split","shownAuthors","concat","isExternal","textAlign","fontSize","prevState","borderColor","highlight","setHighlight","triples","triplesTableData","createTriplesTable","maxH","boxShadow","overflowY","p","borderRadius","Tr","Th","mr","map","tripleNum","querySelector","scrollIntoView","behavior","onMouseEnter","onMouseLeave","Td","subFrags","relation","objFrags","maxW","sentence","query","object","subject","styles","display","years","hyphens","pl","ReactChart","brand400","brand300a","fill","tension","plugins","legend","tooltip","caretSize","grid","drawBorder","gridLines","drawOnChartArea","drawTicks","timelines","timeline","toString","random","faker","itemLabel","timelineLabel","overflowX","pt","m","pb","pos","_timeline","VISUALIZERS","topic_co_occurrences","paper_citations","paper_triples","frequency_timelines","navigate","useNavigate","getToolData","useAxiosWrapper","getAxios","useAPIDataAlert","setLoading","buildVisual"],"sourceRoot":""}