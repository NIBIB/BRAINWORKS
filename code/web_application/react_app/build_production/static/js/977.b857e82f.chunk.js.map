{"version":3,"file":"static/js/977.b857e82f.chunk.js","mappings":"+JAiFA,IAvDmB,SAAC,GAKG,IAJrBA,EAIoB,EAJpBA,WACAC,EAGoB,EAHpBA,cACAC,EAEoB,EAFpBA,aACAC,EACoB,EADpBA,UAEAC,EAAAA,GAAAA,SACEC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,EACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,IAGF,IAAMC,EAAoBhB,IAAY,UAASA,GAEzCiB,EAAgC,QAAdhB,GAAuB,CAC7CiB,OAAQ,CACNC,EAAG,CACDC,MAAO,CACLC,UAAW,MAMbC,GAAO,gBACXC,YAAY,EACZC,qBAAqB,EACrBC,SAAU,CACRC,SAAU,YAGTT,GACAD,GAKCW,EAAO,CACXC,OAHa9B,EAIb+B,SAAU9B,GAGZ,OAAO,SAAC,KAAD,CAAO+B,KAAM7B,EAAWqB,QAASA,EAASK,KAAMA,GACxD,C,6ECkBD,IA9EwB,WAoBtB,IAAQI,GAAoBC,EAAAA,EAAAA,KAApBD,gBACR,GAAoCE,EAAAA,EAAAA,KAA5BC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,WAEfC,EAAqB,WACzBL,EAAgB,wBAAyB,yBAC1C,EAUKM,EAAc,yCAAG,kGACrBC,EADqB,EACrBA,UACAC,EAFqB,EAErBA,WACAC,EAHqB,EAGrBA,UACAC,EAJqB,EAIrBA,WACAd,EALqB,EAKrBA,MAEIe,EAAAA,EAAAA,IAAgBf,IAEdY,EACFR,EAAgB,WAAYQ,EAAY,WAEZ,kBAAjBZ,EAAKgB,SACdZ,EAAgB,WAAYJ,EAAKgB,QAAS,WAI1CL,GACFA,OAIEM,EAAAA,EAAAA,IAAcjB,KACZc,EACFV,EAAgB,wBAAyBU,EAAY,SAErDV,EAAgB,wBAAyBJ,EAAKkB,OAG5CX,EAAYY,QAAQC,IAAIC,OAAS,GACnCb,KAIAK,GACFA,KAnCiB,2CAAH,sDAwCpB,MAAO,CAAEH,eAAAA,EAAgBD,mBAAAA,EAAoBa,gBAhDrB,SAACC,GACvB,IACEA,GAGD,CAFC,SACAd,GACD,CACF,EA2CF,C,yDCxCD,IAtCuB,WAKrB,IAAMe,GAAcC,EAAAA,EAAAA,IAAe,SAACC,GAAD,OAAWA,EAAMC,KAAjB,IAC7BC,GAAWC,EAAAA,EAAAA,KACXC,GAAQC,EAAAA,EAAAA,MA4Bd,MAAO,CAAEP,YAAAA,EAAapB,gBA1BuB,SAC3C4B,EACAC,EACAC,EACAC,GAEA,IAAMR,EAAuB,CAC3BK,MAAOA,EACPC,KAAMA,EACNC,OAAQA,GAAkB,SAE5BN,GAASQ,EAAAA,EAAAA,IAAUT,IACnBG,EAAM,CACJ/B,SAAU,MACViC,MAAOA,EACPK,YAAaJ,EACbC,YAAmBI,IAAXJ,EAAuBA,EAAS,QACxCC,cAAuBG,IAAbH,EAAyBA,EAAW,IAC9CI,YAAY,GAEf,EAMsCC,gBAJf,WACtBZ,GAASa,EAAAA,EAAAA,MACV,EAGF,C,iGC2CD,IAzEwB,WACtB,IAAMb,GAAWC,EAAAA,EAAAA,KACXtB,GAAckB,EAAAA,EAAAA,IAAe,SAACC,GAAD,OAAWA,EAAMgB,MAAjB,IAOnC,GAA0BC,EAAAA,EAAAA,IACxB,CACEC,IAAI,GAAD,OAAKC,EAAAA,EAAL,gBACHC,iBAAiB,GAEnB,CAAEC,QAAQ,IALHC,GAAT,eAsBMC,EAAa,SAAC7B,EAAa8B,GAC/BtB,GAASuB,EAAAA,EAAAA,IAAc,CAAE/B,IAAKA,EAAK8B,MAAOA,IAC3C,EAsBK1C,EAAU,yCAAG,2GACMwC,IADN,iBACThD,EADS,EACTA,MAENiD,EAAWjD,EAAKoB,IAAKpB,EAAKkD,OAE1BD,EAAW,GAAI,IALA,2CAAH,qDAShB,MAAO,CACL1C,YAAAA,EACA6C,UA1BgB,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,IAAKC,EAA2C,EAA3CA,WAAYC,EAA+B,EAA/BA,QACpC3B,GACE4B,EAAAA,EAAAA,IAAe,CACbH,IAAAA,EACAC,WAAAA,EACAC,QAAAA,IAGL,EAmBCN,WAAAA,EACAzC,WAAAA,EACAiD,kBA/CwB,WACxB7B,GAAS8B,EAAAA,EAAAA,MACV,EA+CF,C,uBClFM,SAAS3C,EAAgB4C,GAC9B,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAKC,eAAe,UAC5B,CAKM,SAAS3C,EAAc0C,GAC5B,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAKC,eAAe,QAC5B,C,yGAYM,IAKDC,EAAY,SAACC,GAAkD,IAApCC,EAAmC,uDAA3B,QAASC,EAAkB,uCAClE,GAAIF,EAAM,CACRA,EAAOA,EAAKG,cAIZ,IAHA,IAAIC,EAAQ,EACRC,EAAMH,EAAI3C,OAAS,EACnB+C,EAAkB,KACfF,GAASC,GAAK,CACnB,IAAIE,EAAMC,KAAKC,OAAOL,EAAQC,GAAO,GACjCK,EAAOR,EAAIK,GAAK,GAAGJ,cACnBO,EAAKC,OAAO,EAAGX,EAAKzC,UAAYyC,GAClCM,EAAkBC,EACJ,UAAVN,EAAmBI,EAAME,EAAM,EAC9BH,EAAQG,EAAM,GACVG,EAAOV,EAAMI,EAAQG,EAAM,EACjCF,EAAME,EAAM,CAClB,CACD,OAAOD,CACR,CACF,EACYM,EAAa,SAACZ,EAAcE,GACvC,IAAIW,EAAe,GACfT,EAAQL,EAAUC,EAAM,QAASE,GACjCG,EAAMN,EAAUC,EAAM,OAAQE,GAUlC,OATa,MAATE,GAAwB,MAAPC,IACnBQ,EAAUX,EAAIY,MAAMV,EAAOC,EAAM,IAE/BQ,EAAQtD,OAAS,IACnBsD,EAAQE,MAAK,SAAUC,EAAWC,GAChC,OAAOD,EAAE,GAAKC,EAAE,GAAK,GAAK,CAC3B,IACDJ,EAAUA,EAAQC,MAAM,EAAG,IAEtBD,CACR,EAKM,SAASK,EAAahB,EAAYiB,GACvC,OAAOjB,EAAIkB,QAAO,SAACC,GAAD,OAAeA,EAAKF,WAAaA,CAAjC,IAA2CG,OAC9D,C,mfC1EGC,EAAK,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAmBA,EAAWJ,OAAOK,SAASC,KAAK,IAAnD,EACT,SAASC,IAAwB,2BAALC,EAAK,yBAALA,EAAK,gBAC/B,OAAO,SAAcC,GACnBD,EAAIE,MAAK,SAACC,GAER,OADM,MAANA,GAAsBA,EAAGF,GACT,MAATA,OAAgB,EAASA,EAAMG,gBACvC,GACF,CACF,CAgCD,IAAI,GAKAC,EAAAA,EAAAA,KALJ,eACEC,EADF,KAEEC,EAFF,KAGEC,EAHF,KAIEC,EAJF,KAgDA,IAAI,GAAiCC,EAAAA,EAAAA,GAAc,CACjDC,KAAM,cACNC,aAAc,yGAFhB,eAAKC,EAAL,KAAmBC,EAAnB,KA+FA,IAAI,GAAyCJ,EAAAA,EAAAA,GAAc,CAAC,GAA5D,eAAKK,EAAL,KAAuBC,EAAvB,KAmFA,SAASC,EAAUC,EAAIC,GACrB,MAAO,GAAP,OAAUD,EAAV,iBAAqBC,EACtB,CACD,SAASC,EAAeF,EAAIC,GAC1B,MAAO,GAAP,OAAUD,EAAV,sBAA0BC,EAC3B,CAGD,IAAI,GAAsCE,EAAAA,EAAAA,GAAe,CACvDV,KAAM,oBACNC,aAAc,oGAFhB,eAAKU,EAAL,KAAyBC,EAAzB,KAIIC,GAAOC,EAAAA,EAAAA,KAAW,SAAeC,EAAOC,GAC1C,IAAMC,GAASC,EAAAA,EAAAA,IAAoB,OAAQH,GAC3C,GAAyCI,EAAAA,EAAAA,IAAiBJ,GAAlDK,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAClB,EA3OF,SAAiBN,GAAO,MAEpBO,EASEP,EATFO,aACAC,EAQER,EARFQ,SACAf,EAOEO,EAPFP,MACAgB,EAMET,EANFS,SACAC,EAKEV,EALFU,OALF,EAUIV,EAJFW,aAAAA,OANF,MAMiB,UANjB,IAUIX,EAHFY,YAAAA,OAPF,MAOgB,aAPhB,IAUIZ,EAFFa,UAAAA,OARF,MAQc,MARd,EASKC,GATL,OAUId,EAVJ,GAWA,GAAwCe,EAAAA,EAAAA,UAAQ,OAACR,QAAD,IAACA,EAAAA,EAAgB,GAAjE,eAAOS,EAAP,KAAqBC,EAArB,KACA,GAA0CC,EAAAA,EAAAA,GAAqB,CAC7DC,aAAY,OAAEZ,QAAF,IAAEA,EAAAA,EAAgB,EAC9Ba,MAAO3B,EACPe,SAAAA,IAHF,eAAOa,EAAP,KAAsBC,EAAtB,MAKAC,EAAAA,EAAAA,YAAU,WACK,MAAT9B,GACFwB,EAAgBxB,EAEnB,GAAE,CAACA,IACJ,IAAM+B,EAAc1C,IACd2C,GAAOC,EAAAA,EAAAA,SACPC,EAAG,UAAG3B,EAAMR,UAAT,QAAeiC,EAExB,MAAO,CACLjC,GAFS,QAAH,OAAWmC,GAGjBN,cAAAA,EACAL,aAAAA,EACAM,iBAAAA,EACAL,gBAAAA,EACAR,SAAAA,EACAC,OAAAA,EACAC,aAAAA,EACAC,YAAAA,EACAY,YAAAA,EACAX,UAAAA,EACAC,UAAAA,EAEH,CAkM4Cc,EAD3C,aACQd,EAAR,EAAQA,UAAWU,EAAnB,EAAmBA,YAAgBK,GAAnC,YACMC,GAAUC,EAAAA,EAAAA,UAAQ,kBAAMF,CAAN,GAAW,CAACA,IACZG,GAAclB,EAA9BmB,UAAR,OAAsCnB,EAAtC,IACA,OAAuBoB,EAAAA,cAAoBtD,EAAyB,CAClEwC,MAAOI,GACUU,EAAAA,cAAoB/C,EAAc,CACnDiC,MAAOU,GACUI,EAAAA,cAAoBtC,EAAoB,CACzDwB,MAAOlB,GACUgC,EAAAA,cAAoBC,EAAAA,GAAAA,KAApB,gBACjB7B,UAAWrC,EAAG,cAAeqC,GAC7BL,IAAAA,GACG+B,GAHc,IAIjBI,MAAOlC,EAAOmC,OACbhC,KACJ,IACDP,EAAKwC,YAAc,QAGAC,EAAAA,EAAAA,KAAY,SAAuBvC,EAAOC,GAC3D,IAAMuC,EA9ER,WACE,IAAMV,EAAU1C,IACVoC,EAAc3C,IACZwC,EAA+BS,EAA/BT,cAAeT,EAAgBkB,EAAhBlB,YACjB6B,EAA+B,eAAhB7B,EACf8B,EAA6B,aAAhB9B,EACnB,GAAwBG,EAAAA,EAAAA,WAAS,WAC/B,OAAI0B,EACK,CAAEE,KAAM,EAAGC,MAAO,GACvBF,EACK,CAAEG,IAAK,EAAGC,OAAQ,QAD3B,CAGD,IAND,eAAOC,EAAP,KAAaC,EAAb,KAOA,GAAsCjC,EAAAA,EAAAA,WAAS,GAA/C,eAAOkC,EAAP,KAAoBC,EAApB,KAsBA,OArBAC,EAAAA,EAAAA,IAAoB,WAClB,GAAqB,MAAjB9B,EAAJ,CAEA,IAAM+B,EAAM5B,EAAYzD,KAAKsD,GAC7B,GAAW,MAAP+B,EAAJ,CAEIX,GACFO,EAAQ,CAAEL,KAAMS,EAAIC,KAAKC,WAAYV,MAAOQ,EAAIC,KAAKE,cAEnDb,GACFM,EAAQ,CAAEH,IAAKO,EAAIC,KAAKG,UAAWV,OAAQM,EAAIC,KAAKI,eAEtD,IAAMjE,EAAKkE,uBAAsB,WAC/BR,GAAe,EAChB,IACD,OAAO,WACD1D,GACFmE,qBAAqBnE,EAExB,CAdO,CAHA,CAkBT,GAAE,CAAC6B,EAAeoB,EAAcC,EAAYlB,KACtC,QACL7I,SAAU,WACViL,mBAAoB,0CACpBC,mBAAoBZ,EAAc,QAAU,MAC5Ca,yBAA0B,8BACvBf,EAEN,CAoCwBgB,GACjBC,GAAQ,kBACThE,EAAMgE,OACNxB,GAECtC,EAASL,IACf,OAAuBqC,EAAAA,cAAoB+B,EAAAA,GAAAA,KAApB,gBACrBhE,IAAAA,GACGD,GAFkB,IAGrBM,UAAWrC,EAAG,6BAA8B+B,EAAMM,WAClD0D,MAAAA,EACA5B,MAAOlC,EAAOgE,YAEjB,IACY5B,YAAc,eAO3B,IAAI6B,GAAUC,EAAAA,EAAAA,KAAY,SAAkBpE,EAAOC,GACjD,IAAMoE,EAvOR,SAAoBrE,GAClB,MAAiDZ,IAAzC4B,EAAR,EAAQA,aAAcJ,EAAtB,EAAsBA,YAAaC,EAAnC,EAAmCA,UAC7BW,EAAc3C,IACdyF,GAAYC,EAAAA,EAAAA,cAAY,SAAChG,GAAU,MACjCiG,EAAU,WACd,IAAIC,EACEC,EAAOlD,EAAYmD,YAAY3D,GACjC0D,IACkB,OAAnBD,EAAKC,EAAKrB,OAAyBoB,EAAGG,QAC1C,EACKC,EAAU,WACd,IAAIJ,EACEK,EAAOtD,EAAYuD,YAAY/D,GACjC8D,IACkB,OAAnBL,EAAKK,EAAKzB,OAAyBoB,EAAGG,QAC1C,EAaKnC,EAA+B,eAAhB7B,EACf8B,EAA6B,aAAhB9B,EACboE,EAAWzG,EAAMtC,IACjBgJ,EAA2B,QAAdpE,EAAsB,YAAc,aACjDqE,EAAyB,QAAdrE,EAAsB,aAAe,YAShDsE,GARM,eACTF,GAAa,kBAAMxC,GAAgBoC,GAAtB,KADJ,SAETK,GAAW,kBAAMzC,GAAgB+B,GAAtB,KAFF,sBAGC,kBAAM9B,GAAc8B,GAApB,KAHD,oBAID,kBAAM9B,GAAcmC,GAApB,KAJC,iBAjBK,WACf,IAAIJ,EACEW,EAAQ5D,EAAY6D,eACtBD,IACmB,OAApBX,EAAKW,EAAM/B,OAAyBoB,EAAGG,QAC3C,KAYW,gBAXI,WACd,IAAIH,EACEa,EAAO9D,EAAY+D,cACrBD,IACkB,OAAnBb,EAAKa,EAAKjC,OAAyBoB,EAAGG,QAC1C,IAMW,GAQUI,GAClBG,IACF5G,EAAMiH,iBACNL,EAAO5G,GAEV,GAAE,CAACiD,EAAaR,EAAcJ,EAAaC,IAC5C,OAAO,kBACFb,GADL,IAEEyF,KAAM,UACN,mBAAoB7E,EACpB0D,UAAWjG,EAAgB2B,EAAMsE,UAAWA,IAE/C,CAkLsBoB,EAAW,kBAAK1F,GAAN,IAAaC,IAAAA,KACtCC,EAASL,IACT8F,GAAgB,QACpBC,QAAS,QACN1F,EAAO2F,SAEZ,OAAuB3D,EAAAA,cAAoB4D,EAAAA,GAAAA,KAApB,kBAClBzB,GADkB,IAErB/D,UAAWrC,EAAG,uBAAwB+B,EAAMM,WAC5C8B,MAAOuD,IAEV,IACDxB,EAAQ7B,YAAc,UAItB,IAAIyD,GAAWC,EAAAA,EAAAA,KAAY,SAAmBhG,EAAOC,GACnD,IAAMgG,EA7IR,SAAqBjG,GACnB,IAAQK,EAA2BL,EAA3BK,SAAaS,GAArB,OAAmCd,EAAnC,GACA,EAAiCZ,IAAzBsB,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,aAChB,EAAkCrB,IAA1B4G,EAAR,EAAQA,WAAY1G,EAApB,EAAoBA,GAAI2G,EAAxB,EAAwBA,MAClBC,GAAkBC,EAAAA,EAAAA,SAAO,GAC3BH,IACFE,EAAgBE,SAAU,GAE5B,IAAMC,GAAuBC,EAAAA,EAAAA,GAAe,CAC1CC,YAAaL,EAAgBE,QAC7BJ,WAAAA,EACAQ,QAAShG,EACTiG,KAAMhG,IAER,OAAO,gBACLiG,SAAU,GACP9F,GAFL,IAGET,SAAUkG,EAAuBlG,EAAW,KAC5CoF,KAAM,WACN,kBAAmBU,EACnBU,QAASX,EACT1G,GAAAA,GAEH,CAsHoBsH,EAAY,kBAAK9G,GAAN,IAAaC,IAAAA,KACrCC,EAASL,IACf,OAAuBqC,EAAAA,cAAoB6E,EAAAA,GAAAA,KAApB,gBACrBC,QAAS,KACNf,GAFkB,IAGrB3F,UAAWrC,EAAG,yBAA0B+B,EAAMM,WAC9C8B,MAAOlC,EAAO+G,WAEjB,IACDlB,EAASzD,YAAc,WAIvB,IAAI4E,GAAYC,EAAAA,EAAAA,KAAY,SAAoBnH,EAAOC,GACrD,IAAMmH,EA1KR,SAAsBpH,GACpB,IAAM8B,EAAU1C,IACRI,EAAsBsC,EAAtBtC,GAAI6B,EAAkBS,EAAlBT,cAENhB,GADgBgH,EAAAA,EAAAA,GAAiBrH,EAAMK,UACdiH,KAAI,SAACC,EAAO9H,GAAR,OAAkB+H,EAAAA,EAAAA,eAAcnI,EAAkB,CACnFpD,IAAKwD,EACL2B,MAAO,CACL8E,WAAYzG,IAAU4B,EACtB7B,GAAIE,EAAeF,EAAIC,GACvB0G,MAAO5G,EAAUC,EAAIC,GACrB4B,cAAAA,IAEDkG,EARgC,IASnC,OAAO,kBAAKvH,GAAZ,IAAmBK,SAAAA,GACpB,CA4JqBoH,CAAazH,GAC3BE,EAASL,IACf,OAAuBqC,EAAAA,cAAoBwF,EAAAA,GAAAA,KAApB,kBAClBN,GADkB,IAErBxE,MAAO,OACP3C,IAAAA,EACAK,UAAWrC,EAAG,0BAA2B+B,EAAMM,WAC/C8B,MAAOlC,EAAOyH,YAEjB,IACDT,EAAU5E,YAAc,YAOxB,IAAIsF,GAAMC,EAAAA,EAAAA,KAAY,SAAc7H,EAAOC,GACzC,IAAMC,EAASL,IACTiI,EAnOR,SAAgB9H,GACd,IAAQ+H,EAA0C/H,EAA1C+H,WAAYC,EAA8BhI,EAA9BgI,YAAgBlH,GAApC,OAAkDd,EAAlD,GACA,EAA2EZ,IAAnEkC,EAAR,EAAQA,iBAAkBb,EAA1B,EAA0BA,SAAUjB,EAApC,EAAoCA,GAAIyB,EAAxC,EAAwCA,gBAAiBI,EAAzD,EAAyDA,cACzD,EAA4BtC,EAAkB,CAC5CkJ,SAAUF,IAAeC,IADnBvI,EAAR,EAAQA,MAAOyI,EAAf,EAAeA,SAGThC,EAAazG,IAAU4B,EAYvB8G,GAAiBC,EAAAA,EAAAA,IAAa,kBAC/BtH,GAD8B,IAEjCb,KAAKoI,EAAAA,EAAAA,IAAUH,EAAUlI,EAAMC,KAC/B8H,WAAAA,EACAC,YAAAA,EACAM,QAASjK,EAAgB2B,EAAMsI,SAhBjB,WACdhH,EAAiB7B,EAClB,OAiBD,OAAO,kBACF0I,GADL,IAEE3I,GAAID,EAAUC,EAAIC,GAClBgG,KAAM,MACNmB,SAAUV,EAAa,GAAK,EAC5BnN,KANW,SAOX,gBAAiBmN,EACjB,gBAAiBxG,EAAeF,EAAIC,GACpC8I,QAASR,OAAa,EAAS1J,EAAgB2B,EAAMuI,SAxBvC,WACdtH,EAAgBxB,IAEMgB,KADSsH,IAAcC,IAG3C1G,EAAiB7B,EAEpB,KAmBF,CA+LkB+I,EAAO,kBAAKxI,GAAN,IAAaC,IAAAA,KAC9BwI,GAAY,QAChBzB,QAAS,IACTpB,QAAS,OACT8C,WAAY,SACZC,eAAgB,UACbzI,EAAOkD,KAEZ,OAAuBlB,EAAAA,cAAoB0G,EAAAA,GAAAA,QAApB,kBAClBd,GADkB,IAErBxH,UAAWrC,EAAG,mBAAoB+B,EAAMM,WACxC8B,MAAOqG,IAEV,IACDb,EAAItF,YAAc,M,wBC3VlB,GAnBgB,SAAC,GAA4C,IAA1CuG,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,kBACxB,OACE,WAAChJ,EAAD,CAAMY,QAAM,EAACqI,QAAQ,eAAeC,YAAaC,EAAAA,GAAjD,WACE,UAAC,MAAD,kBAAYH,GAAZ,cACE,UAAC3E,EAAD,UACG0E,EAAMvB,KAAI,SAACvJ,GAAD,OACT,UAAC6J,EAAD,UAAsB7J,EAAKkB,MAAjBlB,EAAKkB,KADN,UAKf,UAACiI,EAAD,UACG2B,EAAMvB,KAAI,SAACvJ,GAAD,OACT,UAACgI,EAAD,UAA2BhI,EAAKmL,WAAjBnL,EAAKkB,KADX,QAMlB,E,iECQD,GArCuB,SAAC,GAMU,IALhCkK,EAK+B,EAL/BA,WACApS,EAI+B,EAJ/BA,WACAC,EAG+B,EAH/BA,cACAC,EAE+B,EAF/BA,aACAC,EAC+B,EAD/BA,UAEMe,GAAiB,UAMlBhB,GAGL,OACE,WAAC,MAAD,CAAMmS,GAAG,QAAT,WACE,UAAC,MAAD,WACE,UAAC,KAAD,CAASC,SAAS,KAAKC,EAAE,OAAzB,SACGH,OAGL,UAAC,MAAD,CAAUI,EAAG,IAAb,UACE,UAAC,KAAD,CAAKA,EAAG,IAAKD,EAAG,OAAhB,UACE,UAACE,GAAA,EAAD,CACEzS,WAAYA,EACZC,cAAeA,EACfC,aAAcgB,EACdf,UAAWA,UAMtB,E,WCnBDC,GAAAA,GAAAA,SACEC,GAAAA,GACAC,GAAAA,GACAC,GAAAA,GACAC,GAAAA,GACAC,GAAAA,EACAC,GAAAA,GACAgS,GAAAA,IAGF,IAuJA,GAvJkB,WAChB,OAAsClO,EAAAA,GAAAA,IAAS,CAC7CG,iBAAiB,EACjBF,IAAI,GAAD,OAAKC,GAAAA,EAAL,kBAFL,kBAAeiO,EAAf,EAAS9Q,KAAgBuD,EAAzB,EAAyBA,QAKzB,OACE,iCACIA,IACA,WAAC,KAAD,CAAYmN,EAAE,OAAOK,QAAS,EAAGC,QAAS,EAA1C,WACE,UAAC,GAAD,CACET,WAAY,qBACZpS,WAAU,OAAE2S,QAAF,IAAEA,OAAF,EAAEA,EAAUG,UAAUvC,KAC9B,SAACvJ,GAAD,OAAyBA,EAAKkB,IAA9B,IAEFjI,cAAe,CACb,CACE8S,MAAO,YACPlR,KAAI,OAAE8Q,QAAF,IAAEA,OAAF,EAAEA,EAAUG,UAAUvC,KACxB,SAACvJ,GAAD,OAAyBA,EAAKqD,KAA9B,IAEF2I,gBAAe,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAUG,UAAUvC,KACnC,SAAC0C,EAAQvK,GAAT,OAA2BwK,EAAAA,GAAAA,GAAWxK,EAAtC,MAINvI,UAAW,SAEb,UAAC,GAAD,CACEiS,WAAY,qBACZpS,WAAU,OAAE2S,QAAF,IAAEA,OAAF,EAAEA,EAAUQ,UAAU5C,KAC9B,SAACvJ,GAAD,OAAyBA,EAAKkB,IAA9B,IAEFjI,cAAe,CACb,CACE8S,MAAO,YACPlR,KAAI,OAAE8Q,QAAF,IAAEA,OAAF,EAAEA,EAAUQ,UAAU5C,KACxB,SAACvJ,GAAD,OAAyBA,EAAKqD,KAA9B,IAEF2I,gBAAe,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAUQ,UAAU5C,KACnC,SAAC0C,EAAQvK,GAAT,OAA2BwK,EAAAA,GAAAA,GAAWxK,EAAtC,MAINvI,UAAW,SAEb,UAAC,GAAD,CACEiS,WAAY,0BACZpS,WAAU,OAAE2S,QAAF,IAAEA,OAAF,EAAEA,EAAU5O,OAAOwM,KAC3B,SAACvJ,GAAD,OAAyBA,EAAKkB,IAA9B,IAEFjI,cAAe,CACb,CACE8S,MAAO,SACPlR,KAAI,OAAE8Q,QAAF,IAAEA,OAAF,EAAEA,EAAU5O,OAAOwM,KAAI,SAACvJ,GAAD,OAAyBA,EAAKqD,KAA9B,IAC3B2I,gBAAiB,CAACI,EAAAA,GAAWC,EAAAA,GAAY,QAASC,EAAAA,MAGtDnT,UAAW,SAEb,UAAC,GAAD,CACEiS,WAAY,kBACZpS,WAAU,OAAE2S,QAAF,IAAEA,OAAF,EAAEA,EAAUY,QAAQhD,KAC5B,SAACvJ,GAAD,OAAyB,IAAIwM,KAAKxM,EAAKkB,KAAvC,IAEFjI,cAAe,CACb,CACE8S,MAAO,kBACPlR,KAAI,OAAE8Q,QAAF,IAAEA,OAAF,EAAEA,EAAUY,QAAQhD,KACtB,SAACvJ,GAAD,OAAyBA,EAAKqD,KAA9B,IAEFoJ,YAAaC,EAAAA,GACbV,gBAAiBW,EAAAA,GACjBC,MAAM,IAGVzT,UAAW,OACXD,aAAc,CACZkB,OAAQ,CACNyS,EAAG,CACD7R,KAAM,OACN8R,KAAM,CACJC,KAAM,OACNC,eAAgB,CACdC,IAAK,gBAOjB,UAAC,GAAD,CACE7B,WAAY,mBACZpS,WAAU,OAAE2S,QAAF,IAAEA,OAAF,EAAEA,EAAUuB,iBAAiB3D,KACrC,SAACvJ,GAAD,OAAyB,IAAIwM,KAAKxM,EAAKkB,KAAvC,IAEFjI,cAAe,CACb,CACE8S,MAAO,gBACPlR,KAAI,OAAE8Q,QAAF,IAAEA,OAAF,EAAEA,EAAUuB,iBAAiB3D,KAC/B,SAACvJ,GAAD,OAAyBA,EAAKqD,KAA9B,IAEFoJ,YAAaC,EAAAA,GACbV,gBAAiBW,EAAAA,GACjBC,MAAM,IAGVzT,UAAW,OACXD,aAAc,CACZkB,OAAQ,CACNyS,EAAG,CACD7R,KAAM,OACN8R,KAAM,CACJC,KAAM,OACNC,eAAgB,CACdC,IAAK,gBAOjB,UAAC,GAAD,CACE7B,WAAY,sBACZpS,WAAY,CAAC,UACbC,cAAa,OAAE0S,QAAF,IAAEA,OAAF,EAAEA,EAAUwB,WAAW5D,KAClC,SAACvJ,EAAqB0B,GACpB,MAAO,CACLqK,MAAO/L,EAAKkB,KACZrG,KAAM,CAACmF,EAAKqD,OACZ2I,iBAAiBE,EAAAA,GAAAA,GAAWxK,GAE/B,IAEHxI,aAAc,CACZkB,OAAQ,CACNyS,EAAG,CACDvS,MAAO,CACLuN,SAAS,MAKjB1O,UAAW,YAMtB,ECjLD,GARmB,WACjB,OACE,UAAC,KAAD,CAAQyS,QAAS,EAAjB,UACE,UAAC,GAAD,KAGL,E,yHC6CD,GA9CyB,WAUvB,IAAMwB,GAAaC,EAAAA,EAAAA,YAAWC,GAAAA,GAiC9B,MAAO,CAAEC,oBAZmB,WACtBH,EAAWI,SAAWJ,EAAWI,QAAQC,QAC3CL,EAAWI,QAAQC,QAEtB,EAQ6BC,qBAND,WACvBN,EAAWI,SAAWJ,EAAWI,QAAQG,SAC3CP,EAAWI,QAAQG,SAEtB,EAEmDC,kBA/B1B,SAAC,GAKH,IAJtB/Q,EAIqB,EAJrBA,MACAC,EAGqB,EAHrBA,KACA0Q,EAEqB,EAFrBA,QACAK,EACqB,EADrBA,UAEIT,EAAWU,YACbV,EAAWU,YAAW,SAACC,GACrB,OAAO,kBACFA,GADL,IAEElR,MAAOA,EACPC,KAAMA,EACN0Q,QAASA,EACTK,UAAWA,GAEd,GAEJ,EAeF,E,sBCjDYG,GAAiD,CAC5D,EAAG,OACH,EAAG,UACH,EAAG,S,sBC0TL,GAzRsB,SAAC,GAKN,IAJfL,EAIc,EAJdA,QACAM,EAGc,EAHdA,OACAC,EAEc,EAFdA,aACAC,EACc,EADdA,gBAEQC,GAASC,EAAAA,GAAAA,KAATD,KACAnT,GAAoBC,EAAAA,GAAAA,KAApBD,gBACR,EAAmDqT,KAA3Cf,EAAR,EAAQA,oBAAqBK,EAA7B,EAA6BA,kBACVW,GAAeC,EAAAA,GAAAA,GAAgB,CAChD/Q,IAAK,+BACLgR,OAAQ,SAFFC,UAIR,GAA+CC,EAAAA,GAAAA,KAAvCpT,EAAR,EAAQA,eAAgBD,EAAxB,EAAwBA,mBAGlBsT,EAAmB,2CAAG,uGAEpBC,EAAiB,WACrBV,GAAgB,SAACJ,GACf,GAAIA,EAAW,OAAO,kBAAKA,GAAZ,IAAuBe,MAAO,GAC9C,GACF,EACKC,EAAgB,WACpBZ,GAAgB,SAACJ,GACf,GAAIA,EAAW,OAAO,kBAAKA,GAAZ,IAAuBe,MAAO,GAC9C,GACF,EAXyB,SAeI,QAAZ,OAAZZ,QAAY,IAAZA,OAAA,EAAAA,EAAcY,QAA0C,KAAZ,OAAZZ,QAAY,IAAZA,OAAA,EAAAA,EAAcY,OAf1B,iCAgBCP,EAAW,CAChCS,YAAW,OAAEd,QAAF,IAAEA,OAAF,EAAEA,EAAce,MAC3B7H,OAAQ,aAlBY,gBAgBdvM,EAhBc,EAgBdA,KAIRU,EAAe,CACbV,KAAMA,EACNW,UAAWqT,EACXpT,WAAW,qBAAD,cAAuByS,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAchN,QAvB3B,2BA0BW,KAAZ,OAAZgN,QAAY,IAAZA,OAAA,EAAAA,EAAcY,OA1BD,kCA2BCP,EAAW,CAChCS,YAAW,OAAEd,QAAF,IAAEA,OAAF,EAAEA,EAAce,MAC3B7H,OAAQ,YA7BY,iBA2BdvM,EA3Bc,EA2BdA,KAIRU,EAAe,CACbV,KAAMA,EACNW,UAAWuT,EACXtT,WAAW,oBAAD,cAAsByS,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAchN,QAlC1B,wBAsCtBjG,EACE,wBACA,qCAxCoB,0DA4CxBK,IA5CwB,0DAAH,qDAgDnB4T,EAAc,2CAAG,uGAEfC,EAAa,WACjBhB,GAAgB,SAACJ,GACf,GAAIA,EAAW,OAAO,kBAAKA,GAAZ,IAAuBqB,QAAQ,GAC/C,GACF,EACKC,EAAe,WACnBlB,GAAgB,SAACJ,GACf,GAAIA,EAAW,OAAO,kBAAKA,GAAZ,IAAuBqB,QAAQ,GAC/C,GACF,EAXoB,gBAgBflB,QAhBe,IAgBfA,IAAAA,EAAckB,OAhBC,iCAiBMb,EAAW,CAChCS,YAAW,OAAEd,QAAF,IAAEA,OAAF,EAAEA,EAAce,MAC3B7H,OAAQ,WAnBO,gBAiBTvM,EAjBS,EAiBTA,KAIRU,EAAe,CACbV,KAAMA,EACNW,UAAW2T,EACX1T,WAAW,mBAAD,OAAqByS,EAAahN,QAxB7B,yCA4BMqN,EAAW,CAChCS,YAAW,OAAEd,QAAF,IAAEA,OAAF,EAAEA,EAAce,MAC3B7H,OAAQ,cA9BO,iBA4BTvM,EA5BS,EA4BTA,KAIRU,EAAe,CACbV,KAAMA,EACNW,UAAW6T,EACX5T,WAAW,qBAAD,cAAuByS,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAchN,QAnChC,0DAuCnB5F,IAvCmB,0DAAH,qDA2EdgU,EAAW,2CAAG,uGACZC,EAAkB,WACtBpB,GAAgB,SAACJ,GACf,GAAIA,EAAW,OAAO,kBAAKA,GAAZ,IAAuByB,UAAU,GACjD,GACF,EACKC,EAAgB,WACpBtB,GAAgB,SAACJ,GACf,GAAIA,EAAW,OAAO,kBAAKA,GAAZ,IAAuByB,UAAU,GACjD,GACF,EAViB,gBAaZtB,QAbY,IAaZA,IAAAA,EAAcsB,SAbF,iCAcSjB,EAAW,CAChCS,YAAW,OAAEd,QAAF,IAAEA,OAAF,EAAEA,EAAce,MAC3B7H,OAAQ,2BAhBI,gBAcNvM,EAdM,EAcNA,KAIRU,EAAe,CACbV,KAAMA,EACNW,UAAW+T,EACX9T,WAAW,iBAAD,OAAmByS,EAAahN,KAAhC,cArBE,yCAyBSqN,EAAW,CAChCS,YAAW,OAAEd,QAAF,IAAEA,OAAF,EAAEA,EAAce,MAC3B7H,OAAQ,wBA3BI,iBAyBNvM,EAzBM,EAyBNA,KAIRU,EAAe,CACbV,KAAMA,EACNW,UAAWiU,EACXhU,WAAW,eAAD,cAAiByS,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAchN,KAA/B,cAhCE,0DAoChB5F,IApCgB,0DAAH,qDAgDXoU,EAAuD,CAC3D,CACExO,KAAkB,OAAZgN,QAAY,IAAZA,GAAAA,EAAcsB,SAAW,gBAAkB,mBACjD1P,SAAU,QACV6P,UAAuB,OAAZzB,QAAY,IAAZA,GAAAA,EAAcsB,SAAW,iBAAmB,eACvDI,aAAcN,GAGhB,CACEpO,KAAM,OACNpB,SAAU,QACV+P,WAAY7B,IAEd,CACE9M,KAAkB,OAAZgN,QAAY,IAAZA,GAAAA,EAAckB,OAAS,iBAAmB,iBAChDtP,SAAU,cAEZ,CAAEoB,KAAM,UAAWpB,SAAU,WAC7B,CAAEoB,KAAM,UAAWpB,SAAU,WAC7B,CAAEoB,KAAM,aAAcpB,SAAU,cAChC,CAAEoB,KAAM,UAAWpB,SAAU,YAG/B,OACE,WAAC,MAAD,CAAO6N,QAASA,EAASM,OAAQA,EAAQ6B,YAAU,EAAnD,WACE,UAAC,MAAD,KACA,WAAC,MAAD,CAAcC,KAAK,MAAnB,WACE,UAAC,MAAD,WACE,WAAC,KAAD,CAAQC,QAAQ,gBAAgBC,GAAI,GAApC,WACE,WAAC,KAAD,0BAAe/B,QAAf,IAAeA,OAAf,EAAeA,EAAchN,QAGZ,KAAZ,OAAJkN,QAAI,IAAJA,OAAA,EAAAA,EAAMU,SACL,WAAC,MAAD,YACE,UAAC,MAAD,CACEoB,GAAIC,GAAAA,GACJ,aAAW,UACXC,MAAM,UAAC,OAAD,IACNpF,QAAQ,aAEV,WAAC,MAAD,CAAUM,SAAU,KAApB,WACE,UAAC,MAAD,CAAU8E,MAAM,UAAC,OAAD,IAAa7F,QAzHpB,WACvB,IAAM8F,EAAgB,WACpBlC,OAAgBhR,GAChBwQ,GACD,EAEK2C,EAAU,2CAAG,qHAEQ/B,EAAW,CAChCS,YAAW,OAAEd,QAAF,IAAEA,OAAF,EAAEA,EAAce,MAC3B7H,OAAQ,YAJK,gBAEPvM,EAFO,EAEPA,KAIRU,EAAe,CACbV,KAAMA,EACNW,UAAW6U,EACX5U,WAAW,oBAAD,cAAsByS,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAchN,QATjC,gDAYf5F,IAZe,yDAAH,qDAgBZiS,IACFK,EAAkB,CAChB/Q,MAAO,+BACPC,KAAK,mCAAD,cAAqCoR,QAArC,IAAqCA,OAArC,EAAqCA,EAAchN,KAAnD,MACJsM,QAAS8C,IAEX/C,IAEH,EA2Fe,0BAGA,UAAC,MAAD,CAAU6C,MAAM,UAAC,OAAD,IAAmB7F,QAAS2E,EAA5C,SACe,OAAZhB,QAAY,IAAZA,GAAAA,EAAckB,OAAS,WAAa,gBAEvC,UAAC,MAAD,CAAUgB,MAAM,UAAC,OAAD,IAAa7F,QAASqE,EAAtC,SAC2B,KAAZ,OAAZV,QAAY,IAAZA,OAAA,EAAAA,EAAcY,OACX,iBACA,mCAOhB,UAAC,KAAD,KACA,UAAC,MAAD,KACA,UAAC,MAAD,CAAWyB,GAAI,EAAf,UACE,UAAC,KAAD,CAAQC,MAAM,aAAa5E,QAAS,EAApC,SAEGsC,GACCwB,EAAuBnG,KAAI,SAACvJ,EAAMyQ,GAAP,OACzB,mCACE,WAAC,KAAD,YACE,UAAC,KAAD,CAASnF,SAAS,KAAlB,SAAwBtL,EAAKkB,QAC7B,UAAC,KAAD,UACGlB,EAAK6P,WACF7P,EAAK6P,WAAW3B,EAAalO,EAAKF,WACK,kBAAhCoO,EAAalO,EAAKF,WACzBoO,EAAalO,EAAKF,UAAU5D,OAAS,EACrCgS,EAAalO,EAAKF,UAClB,kBAELE,EAAK2P,WAAa3P,EAAK4P,eACtB,UAAC,MAAD,CAAQc,KAAM,KAAMnG,QAASvK,EAAK4P,aAAlC,SACG5P,EAAK2P,cAZCc,IAgBb,UAAC,KAAD,MAlBuB,SAuBjC,UAAC,MAAD,WACE,UAAC,MAAD,CAAQlG,QAASoD,EAAjB,0BAKT,ECrLD,GAjHoB,WAClB,OAA4B3K,EAAAA,EAAAA,UAAS,IAArC,eAAO2N,EAAP,KAAeC,EAAf,KACA,GAAwC5N,EAAAA,EAAAA,YAAxC,eAAOkL,EAAP,KAAqBC,EAArB,KACA,GAAgCnL,EAAAA,EAAAA,UAA0B,IAA1D,eAAO2I,EAAP,KAAiBkF,EAAjB,KACA,GAAoCC,EAAAA,GAAAA,MAA5B7C,EAAR,EAAQA,OAAQR,EAAhB,EAAgBA,OAAQE,EAAxB,EAAwBA,QAGLoD,GAAcvC,EAAAA,GAAAA,GAAgB,CAC/C/Q,IAAK,8BACLgR,OAAQ,SAFFC,WAMRlL,EAAAA,EAAAA,YAAU,WACR,IAAMwN,EAAQC,YAAU,yBAAC,8GACAF,EAAU,CAAEG,MAAOP,EAAQQ,KAAM,IADjC,gBAEvB,QADQtW,EADe,EACfA,YACR,IAAIA,GAAAA,EAAMgB,SACRgV,EAAW,UAAChW,EAAKgB,eAAN,aAAC,EAAcuV,OAHL,2CAKtB,KACH,OAAO,WACLC,aAAaL,EACd,CAEF,GAAE,CAACL,EAAQ1C,IAWZ,OACE,mCACE,UAAC,GAAD,CACEA,OAAQA,EACRN,QAASA,EACTF,OAAQA,EACRS,aAAcA,EACdC,gBAAiBA,KAEnB,WAAC,KAAD,CAAQ5C,EAAE,OAAV,WACE,WAAC,MAAD,YACE,UAAC,MAAD,CACE+F,cAAc,OACdhP,UAAU,UAAC,MAAD,CAAaiP,MAAOC,EAAAA,OAEhC,UAAC,MAAD,CACE/O,SAzBW,SAACgP,GACpBb,EAAUa,EAAEC,OAAOrO,MACpB,EAwBSA,MAAOsN,EACPgB,YAAY,iDACZtG,GAAG,cAIP,UAAC,MAAD,CACEG,EAAG,IACHD,EAAE,OACFqG,UAAU,OACVC,OAAO,MACPpF,YAAY,WACZqF,IAAI,WACJzG,GAAG,QAPL,UASE,WAAC,MAAD,CAAOL,QAAQ,SAAf,WACE,UAAC,MAAD,WACE,WAAC,GAAA+G,GAAD,YACE,UAAC,GAAAC,GAAD,CAAIC,WAAS,EAAb,iBACA,UAAC,GAAAD,GAAD,oBACA,UAAC,GAAAA,GAAD,qBACA,UAAC,GAAAA,GAAD,oBACA,UAAC,GAAAA,GAAD,UAGJ,UAAC,MAAD,UAEGrG,GACDA,EAASzP,OAAS,IACjByP,EAASlN,eAAe,SAFxB,OAGCkN,QAHD,IAGCA,OAHD,EAGCA,EAAUpC,KAAI,SAACvJ,GAAD,OACZ,WAAC,GAAA+R,GAAD,YACE,UAAC,GAAAG,GAAD,CAAID,WAAS,EAAb,SAAejS,EAAKyB,MACpB,UAAC,GAAAyQ,GAAD,UAAKlS,EAAKkB,QACV,UAAC,GAAAgR,GAAD,UAAKlS,EAAKiP,SACV,UAAC,GAAAiD,GAAD,UAAKlE,GAAoBhO,EAAK8O,UAE9B,UAAC,GAAAoD,GAAD,WACE,UAAC,MAAD,CACE3H,QAAS,WA5D7B4D,EA6DuCnO,GA5DvCyN,GA6DqB,EAHH,wBAPKzN,EAAKyB,GADF,KAmBd,UAAC,KAAD,CAAQ8P,MAAOC,EAAAA,EAASM,IAAK,WAAYvG,EAAE,OAAOC,EAAE,MAApD,wCAUf,EChIY2G,GAAmB,CAC9B,CAAEjR,KAAM,WAAYiK,WAAW,UAAC,GAAD,KAC/B,CAAEjK,KAAM,SAAUiK,WAAW,UAAC,GAAD,MAoB/B,GAjBc,WAEZ,OADAiH,EAAAA,GAAAA,GAAa,UAEX,WAAC,KAAD,CAAK7B,GAAI,IAAT,WACE,UAAC8B,EAAA,EAAD,CACEC,SAAU,SACVzV,MAAO,gBACPC,KAAM,uCACNyV,WAAY,CAAEC,GAAI,OAEpB,UAAC,KAAD,CAAWzC,KAAK,MAAhB,UACE,UAAC,GAAD,CAASjF,MAAOqH,SAIvB,C,qEChBM,SAASjG,EAAWxK,GACzB,IAAM+Q,EAAS,CACbnG,EAAAA,GACAoG,EAAAA,GACArG,EAAAA,GACAD,EAAAA,GACAuG,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GAGF,OAAOL,EAAO/Q,EAAQ+Q,EAAOvW,OAC9B,C","sources":["common/components/Charts/ReactChart.tsx","common/hooks/useAPIDataAlert.tsx","common/hooks/useGlobalAlert.tsx","common/hooks/useGlobalFormik.tsx","common/utils.ts","../node_modules/@chakra-ui/tabs/dist/index.esm.js","common/components/MenuTabs/index.tsx","common/components/Charts/ReactChartCard.tsx","pages/dashboard/admin/components/stats/user-stats/UserStats.tsx","pages/dashboard/admin/components/stats/AdminStats.tsx","common/hooks/useGlobalConfirm.tsx","pages/dashboard/templates/templates.ts","pages/dashboard/admin/components/user-manager/EditUserModal.tsx","pages/dashboard/admin/components/user-manager/UserManager.tsx","pages/dashboard/admin/Admin.tsx","setup/theme/utils/index.ts"],"sourcesContent":["import {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  PointElement,\n  LineElement,\n  BarController,\n  PieController,\n  LineController,\n  TimeScale,\n} from \"chart.js\";\nimport { Chart } from \"react-chartjs-2\";\nimport { ReactChartType } from \"../../models\";\n// @ts-ignore\nimport \"chartjs-adapter-date-fns\";\n\n/**\n * React Chart\n *\n * React component which wraps React ChartJS, reducing boiler plate code for ChartJS\n */\nconst ReactChart = ({\n  chartXAxis,\n  chartDatasets,\n  chartOptions,\n  chartType,\n}: ReactChartType) => {\n  ChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n    ArcElement,\n    PointElement,\n    LineElement,\n    BarController,\n    PieController,\n    LineController,\n    TimeScale\n  );\n\n  const reactChartOptions = chartOptions && { ...chartOptions };\n\n  const barChartOptions = chartType === \"bar\" && {\n    scales: {\n      y: {\n        ticks: {\n          precision: 0,\n        },\n      },\n    },\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      position: \"nearest\",\n    },\n\n    ...barChartOptions,\n    ...reactChartOptions,\n  };\n\n  const labels = chartXAxis;\n\n  const data = {\n    labels,\n    datasets: chartDatasets,\n  };\n\n  return <Chart type={chartType} options={options} data={data} />;\n};\n\nexport default ReactChart;\n","import { containsError, containsSuccess } from \"../utils\";\nimport useGlobalFormik from \"./useGlobalFormik\";\nimport useGlobalAlert from \"./useGlobalAlert\";\n\ninterface PostWrapperFunctionProps {\n  data: any;\n  onSuccess?: () => void;\n  successMsg?: string;\n  onFailure?: () => void;\n  failureMsg?: string;\n}\n\n/**\n * React hook that helps reduce redundant code when posting with `useAxios` to the BRAINWORKS API. It ultizes `useGlobalAlert` and and try and catch statements to help error check\n *\n * If JSON returns `success` or `error` it prints that message, otherwise it prints out success/error message from the API\n *\n * If request fails, then it prints out generic error message\n */\nconst useAPIDataAlert = (): {\n  /**\n   * Function that reduces redunancy of interpretting a JSON from the BRAINWORKS API\n   */\n  apiDataAlerter: ({\n    onSuccess,\n    successMsg,\n    onFailure,\n    failureMsg,\n    data,\n  }: PostWrapperFunctionProps) => Promise<void>;\n  /**\n   * Function that returns a standard error message\n   */\n  standardAlertError: () => void;\n  /**\n   * Function that puts a try catch statement around the given function, if there are errors it throws the standard alert error\n   */\n  tryCatchWrapper: (func: any) => void;\n} => {\n  const { showGlobalAlert } = useGlobalAlert();\n  const { formikSlice, newCaptcha } = useGlobalFormik();\n\n  const standardAlertError = () => {\n    showGlobalAlert(\"Something went wrong!\", \"Please try again later\");\n  };\n\n  const tryCatchWrapper = (func: any) => {\n    try {\n      func();\n    } catch {\n      standardAlertError();\n    }\n  };\n\n  const apiDataAlerter = async ({\n    onSuccess,\n    successMsg,\n    onFailure,\n    failureMsg,\n    data,\n  }: PostWrapperFunctionProps) => {\n    if (containsSuccess(data)) {\n      // * If object contains \"success\", alert either custom success message or one from back end\n      if (successMsg) {\n        showGlobalAlert(\"Success!\", successMsg, \"success\");\n      } else {\n        if (typeof data.success === \"string\") {\n          showGlobalAlert(\"Success!\", data.success, \"success\");\n        }\n      }\n      // * Run success function, if one is defined\n      if (onSuccess) {\n        onSuccess();\n      }\n    } else {\n      // * If object contains \"error\", alert either custom failure message or one from back end\n      if (containsError(data)) {\n        if (failureMsg) {\n          showGlobalAlert(\"Something went wrong!\", failureMsg, \"error\");\n        } else {\n          showGlobalAlert(\"Something went wrong!\", data.error);\n        }\n        // * If form has CAPTCHA, checking if image is set, if so set a new captcha\n        if (formikSlice.captcha.img.length > 0) {\n          newCaptcha();\n        }\n      }\n      // * Run failure function, if one is define\n      if (onFailure) {\n        onFailure();\n      }\n    }\n  };\n\n  return { apiDataAlerter, standardAlertError, tryCatchWrapper };\n};\n\nexport default useAPIDataAlert;\n","import { useToast } from \"@chakra-ui/react\";\nimport { hideAlert, showAlert } from \"../../store/features/alertSlice\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport { AlertType, ShowAlertType } from \"../../store/models\";\n\n/**\n * @returns state to hide or show global alert system\n */\n\ntype ShowGlobalAlertType = (\n  title: string,\n  desc: string,\n  status?: \"error\" | \"info\" | \"warning\" | \"success\" | \"loading\" | undefined,\n  duration?: number | null\n) => void;\n\n// TODO: clean this up like the status\nconst useGlobalAlert = (): {\n  globalAlert: AlertType;\n  showGlobalAlert: ShowGlobalAlertType;\n  hideGlobalAlert: () => void;\n} => {\n  const globalAlert = useAppSelector((state) => state.alert);\n  const dispatch = useAppDispatch();\n  const toast = useToast();\n\n  const showGlobalAlert: ShowGlobalAlertType = (\n    title,\n    desc,\n    status,\n    duration\n  ) => {\n    const alert: ShowAlertType = {\n      title: title,\n      desc: desc,\n      status: status ? status : \"error\",\n    };\n    dispatch(showAlert(alert));\n    toast({\n      position: \"top\",\n      title: title,\n      description: desc,\n      status: status !== undefined ? status : \"error\",\n      duration: duration !== undefined ? duration : 5000,\n      isClosable: true,\n    });\n  };\n\n  const hideGlobalAlert = () => {\n    dispatch(hideAlert());\n  };\n\n  return { globalAlert, showGlobalAlert, hideGlobalAlert };\n};\n\nexport default useGlobalAlert;\n","import useAxios from \"axios-hooks\";\n\nimport {\n  resetFormikSlice,\n  setFormikSlice,\n  setNewCaptcha,\n} from \"../../store/features/formikSlice\";\nimport { FormikSliceType } from \"../../store/models\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport { API_URL } from \"../templates/api\";\ninterface useFormikSliceReturnType {\n  formikSlice: any;\n  setFormik: (state: FormikSliceType) => void;\n  setCaptcha: any;\n  newCaptcha: any;\n  resetGlobalFormik: any;\n}\n\n/**\n * useGlobalFormik\n *\n * React hook that passes additional information globally for the formik forms\n */\nconst useGlobalFormik = (): useFormikSliceReturnType => {\n  const dispatch = useAppDispatch();\n  const formikSlice = useAppSelector((state) => state.formik);\n\n  /**\n   * getNewCaptcha\n   *\n   * Axios get request to get new information for the CAPTCHA\n   */\n  const [, getNewCaptcha] = useAxios(\n    {\n      url: `${API_URL}/new_captcha`,\n      withCredentials: true,\n    },\n    { manual: true }\n  );\n\n  /**\n   * resetGlobalFormik\n   *\n   * Redux reducer wrapper that resets the formikSlice to its initial values\n   */\n  const resetGlobalFormik = () => {\n    dispatch(resetFormikSlice());\n  };\n\n  /**\n   * setCaptcha\n   *\n   * Redux reducer wrapper that sets current CAPTCHA information in formikSlice\n   */\n  const setCaptcha = (img: string, audio: string) => {\n    dispatch(setNewCaptcha({ img: img, audio: audio }));\n  };\n\n  /**\n   * setFormik\n   *\n   * Function that wraps formikSlice dispatch\n   */\n  const setFormik = ({ key, fieldsInfo, loading }: FormikSliceType) => {\n    dispatch(\n      setFormikSlice({\n        key,\n        fieldsInfo,\n        loading,\n      })\n    );\n  };\n\n  /**\n   * newCaptcha\n   *\n   * Function that makes a get request to get a new captcha img & audio\n   */\n  const newCaptcha = async () => {\n    const { data } = await getNewCaptcha();\n    if (data) {\n      setCaptcha(data.img, data.audio);\n    } else {\n      setCaptcha(\"\", \"\");\n    }\n  };\n\n  return {\n    formikSlice,\n    setFormik,\n    setCaptcha,\n    newCaptcha,\n    resetGlobalFormik,\n  };\n};\n\nexport default useGlobalFormik;\n","/**\n * Function prevents default behavior of form, to reload\n */\nexport function preventFormSubmission(e: React.KeyboardEvent<HTMLFormElement>) {\n  if (e.key === \"Enter\") {\n    e.preventDefault();\n  }\n}\n\n/**\n * Function that returns true if object has key success\n */\nexport function containsSuccess(obj: any) {\n  return obj?.hasOwnProperty(\"success\");\n}\n\n/**\n * Function that returns true if object has key error\n */\nexport function containsError(obj: any) {\n  return obj?.hasOwnProperty(\"error\");\n}\n\n/**\n * Function that returns true if string is empty\n */\nexport function emptyString(s: string) {\n  return s.length === 0;\n}\n\n/**\n * Function that overwrites the yup to schema object because\n */\nexport const fixYupToSchemaObject = (s: string) => {};\n\n/**\n * Function that uses binary search to get autocomplete input\n */\nconst findMatch = (text: string, which = \"first\", arr: String[]) => {\n  if (text) {\n    text = text.toLowerCase();\n    let start = 0;\n    let end = arr.length - 1;\n    let candidate_index = null;\n    while (start <= end) {\n      let mid = Math.floor((start + end) / 2);\n      let elem = arr[mid][0].toLowerCase();\n      if (elem.substr(0, text.length) === text) {\n        candidate_index = mid;\n        if (which === \"first\") end = mid - 1;\n        else start = mid + 1;\n      } else if (elem < text) start = mid + 1;\n      else end = mid - 1;\n    }\n    return candidate_index;\n  }\n};\nexport const matchItems = (text: string, arr: String[]) => {\n  let matches: any = [];\n  let start = findMatch(text, \"first\", arr); // get first match\n  let end = findMatch(text, \"last\", arr); // get last match\n  if (start != null && end != null) {\n    matches = arr.slice(start, end + 1);\n  }\n  if (matches.length > 0) {\n    matches.sort(function (a: string, b: string) {\n      return a[1] < b[1] ? 1 : -1;\n    });\n    matches = matches.slice(0, 5);\n  }\n  return matches;\n};\n\n/**\n * Function that gets all info of field given the property name\n */\nexport function getFieldInfo(arr: any[], property: string) {\n  return arr.filter((item: any) => item.property === property).shift();\n}\n","// ../../../react-shim.js\nimport React from \"react\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nfunction callAllHandlers(...fns) {\n  return function func(event) {\n    fns.some((fn) => {\n      fn == null ? void 0 : fn(event);\n      return event == null ? void 0 : event.defaultPrevented;\n    });\n  };\n}\n\n// src/tab-indicator.tsx\nimport { chakra as chakra2, forwardRef as forwardRef2 } from \"@chakra-ui/system\";\n\n// src/tabs.tsx\nimport { createContext as createContext2 } from \"@chakra-ui/react-context\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\n\n// src/use-tabs.ts\nimport { useClickable } from \"@chakra-ui/clickable\";\nimport { createDescendantContext } from \"@chakra-ui/descendant\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { lazyDisclosure } from \"@chakra-ui/lazy-utils\";\nimport {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  useId,\n  createElement\n} from \"react\";\nvar [\n  TabsDescendantsProvider,\n  useTabsDescendantsContext,\n  useTabsDescendants,\n  useTabsDescendant\n] = createDescendantContext();\nfunction useTabs(props) {\n  const {\n    defaultIndex,\n    onChange,\n    index,\n    isManual,\n    isLazy,\n    lazyBehavior = \"unmount\",\n    orientation = \"horizontal\",\n    direction = \"ltr\",\n    ...htmlProps\n  } = props;\n  const [focusedIndex, setFocusedIndex] = useState(defaultIndex ?? 0);\n  const [selectedIndex, setSelectedIndex] = useControllableState({\n    defaultValue: defaultIndex ?? 0,\n    value: index,\n    onChange\n  });\n  useEffect(() => {\n    if (index != null) {\n      setFocusedIndex(index);\n    }\n  }, [index]);\n  const descendants = useTabsDescendants();\n  const uuid = useId();\n  const uid = props.id ?? uuid;\n  const id = `tabs-${uid}`;\n  return {\n    id,\n    selectedIndex,\n    focusedIndex,\n    setSelectedIndex,\n    setFocusedIndex,\n    isManual,\n    isLazy,\n    lazyBehavior,\n    orientation,\n    descendants,\n    direction,\n    htmlProps\n  };\n}\nvar [TabsProvider, useTabsContext] = createContext({\n  name: \"TabsContext\",\n  errorMessage: \"useTabsContext: `context` is undefined. Seems you forgot to wrap all tabs components within <Tabs />\"\n});\nfunction useTabList(props) {\n  const { focusedIndex, orientation, direction } = useTabsContext();\n  const descendants = useTabsDescendantsContext();\n  const onKeyDown = useCallback((event) => {\n    const nextTab = () => {\n      var _a;\n      const next = descendants.nextEnabled(focusedIndex);\n      if (next)\n        (_a = next.node) == null ? void 0 : _a.focus();\n    };\n    const prevTab = () => {\n      var _a;\n      const prev = descendants.prevEnabled(focusedIndex);\n      if (prev)\n        (_a = prev.node) == null ? void 0 : _a.focus();\n    };\n    const firstTab = () => {\n      var _a;\n      const first = descendants.firstEnabled();\n      if (first)\n        (_a = first.node) == null ? void 0 : _a.focus();\n    };\n    const lastTab = () => {\n      var _a;\n      const last = descendants.lastEnabled();\n      if (last)\n        (_a = last.node) == null ? void 0 : _a.focus();\n    };\n    const isHorizontal = orientation === \"horizontal\";\n    const isVertical = orientation === \"vertical\";\n    const eventKey = event.key;\n    const ArrowStart = direction === \"ltr\" ? \"ArrowLeft\" : \"ArrowRight\";\n    const ArrowEnd = direction === \"ltr\" ? \"ArrowRight\" : \"ArrowLeft\";\n    const keyMap = {\n      [ArrowStart]: () => isHorizontal && prevTab(),\n      [ArrowEnd]: () => isHorizontal && nextTab(),\n      ArrowDown: () => isVertical && nextTab(),\n      ArrowUp: () => isVertical && prevTab(),\n      Home: firstTab,\n      End: lastTab\n    };\n    const action = keyMap[eventKey];\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [descendants, focusedIndex, orientation, direction]);\n  return {\n    ...props,\n    role: \"tablist\",\n    \"aria-orientation\": orientation,\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n  };\n}\nfunction useTab(props) {\n  const { isDisabled, isFocusable, ...htmlProps } = props;\n  const { setSelectedIndex, isManual, id, setFocusedIndex, selectedIndex } = useTabsContext();\n  const { index, register } = useTabsDescendant({\n    disabled: isDisabled && !isFocusable\n  });\n  const isSelected = index === selectedIndex;\n  const onClick = () => {\n    setSelectedIndex(index);\n  };\n  const onFocus = () => {\n    setFocusedIndex(index);\n    const isDisabledButFocusable = isDisabled && isFocusable;\n    const shouldSelect = !isManual && !isDisabledButFocusable;\n    if (shouldSelect) {\n      setSelectedIndex(index);\n    }\n  };\n  const clickableProps = useClickable({\n    ...htmlProps,\n    ref: mergeRefs(register, props.ref),\n    isDisabled,\n    isFocusable,\n    onClick: callAllHandlers(props.onClick, onClick)\n  });\n  const type = \"button\";\n  return {\n    ...clickableProps,\n    id: makeTabId(id, index),\n    role: \"tab\",\n    tabIndex: isSelected ? 0 : -1,\n    type,\n    \"aria-selected\": isSelected,\n    \"aria-controls\": makeTabPanelId(id, index),\n    onFocus: isDisabled ? void 0 : callAllHandlers(props.onFocus, onFocus)\n  };\n}\nvar [TabPanelProvider, useTabPanelContext] = createContext({});\nfunction useTabPanels(props) {\n  const context = useTabsContext();\n  const { id, selectedIndex } = context;\n  const validChildren = getValidChildren(props.children);\n  const children = validChildren.map((child, index) => createElement(TabPanelProvider, {\n    key: index,\n    value: {\n      isSelected: index === selectedIndex,\n      id: makeTabPanelId(id, index),\n      tabId: makeTabId(id, index),\n      selectedIndex\n    }\n  }, child));\n  return { ...props, children };\n}\nfunction useTabPanel(props) {\n  const { children, ...htmlProps } = props;\n  const { isLazy, lazyBehavior } = useTabsContext();\n  const { isSelected, id, tabId } = useTabPanelContext();\n  const hasBeenSelected = useRef(false);\n  if (isSelected) {\n    hasBeenSelected.current = true;\n  }\n  const shouldRenderChildren = lazyDisclosure({\n    wasSelected: hasBeenSelected.current,\n    isSelected,\n    enabled: isLazy,\n    mode: lazyBehavior\n  });\n  return {\n    tabIndex: 0,\n    ...htmlProps,\n    children: shouldRenderChildren ? children : null,\n    role: \"tabpanel\",\n    \"aria-labelledby\": tabId,\n    hidden: !isSelected,\n    id\n  };\n}\nfunction useTabIndicator() {\n  const context = useTabsContext();\n  const descendants = useTabsDescendantsContext();\n  const { selectedIndex, orientation } = context;\n  const isHorizontal = orientation === \"horizontal\";\n  const isVertical = orientation === \"vertical\";\n  const [rect, setRect] = useState(() => {\n    if (isHorizontal)\n      return { left: 0, width: 0 };\n    if (isVertical)\n      return { top: 0, height: 0 };\n    return void 0;\n  });\n  const [hasMeasured, setHasMeasured] = useState(false);\n  useSafeLayoutEffect(() => {\n    if (selectedIndex == null)\n      return;\n    const tab = descendants.item(selectedIndex);\n    if (tab == null)\n      return;\n    if (isHorizontal) {\n      setRect({ left: tab.node.offsetLeft, width: tab.node.offsetWidth });\n    }\n    if (isVertical) {\n      setRect({ top: tab.node.offsetTop, height: tab.node.offsetHeight });\n    }\n    const id = requestAnimationFrame(() => {\n      setHasMeasured(true);\n    });\n    return () => {\n      if (id) {\n        cancelAnimationFrame(id);\n      }\n    };\n  }, [selectedIndex, isHorizontal, isVertical, descendants]);\n  return {\n    position: \"absolute\",\n    transitionProperty: \"left, right, top, bottom, height, width\",\n    transitionDuration: hasMeasured ? \"200ms\" : \"0ms\",\n    transitionTimingFunction: \"cubic-bezier(0, 0, 0.2, 1)\",\n    ...rect\n  };\n}\nfunction makeTabId(id, index) {\n  return `${id}--tab-${index}`;\n}\nfunction makeTabPanelId(id, index) {\n  return `${id}--tabpanel-${index}`;\n}\n\n// src/tabs.tsx\nvar [TabsStylesProvider, useTabsStyles] = createContext2({\n  name: `TabsStylesContext`,\n  errorMessage: `useTabsStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Tabs />\" `\n});\nvar Tabs = forwardRef(function Tabs2(props, ref) {\n  const styles = useMultiStyleConfig(\"Tabs\", props);\n  const { children, className, ...rest } = omitThemingProps(props);\n  const { htmlProps, descendants, ...ctx } = useTabs(rest);\n  const context = useMemo(() => ctx, [ctx]);\n  const { isFitted: _, ...rootProps } = htmlProps;\n  return /* @__PURE__ */ React.createElement(TabsDescendantsProvider, {\n    value: descendants\n  }, /* @__PURE__ */ React.createElement(TabsProvider, {\n    value: context\n  }, /* @__PURE__ */ React.createElement(TabsStylesProvider, {\n    value: styles\n  }, /* @__PURE__ */ React.createElement(chakra.div, {\n    className: cx(\"chakra-tabs\", className),\n    ref,\n    ...rootProps,\n    __css: styles.root\n  }, children))));\n});\nTabs.displayName = \"Tabs\";\n\n// src/tab-indicator.tsx\nvar TabIndicator = forwardRef2(function TabIndicator2(props, ref) {\n  const indicatorStyle = useTabIndicator();\n  const style = {\n    ...props.style,\n    ...indicatorStyle\n  };\n  const styles = useTabsStyles();\n  return /* @__PURE__ */ React.createElement(chakra2.div, {\n    ref,\n    ...props,\n    className: cx(\"chakra-tabs__tab-indicator\", props.className),\n    style,\n    __css: styles.indicator\n  });\n});\nTabIndicator.displayName = \"TabIndicator\";\n\n// src/tab-list.tsx\nimport {\n  chakra as chakra3,\n  forwardRef as forwardRef3\n} from \"@chakra-ui/system\";\nvar TabList = forwardRef3(function TabList2(props, ref) {\n  const tablistProps = useTabList({ ...props, ref });\n  const styles = useTabsStyles();\n  const tablistStyles = {\n    display: \"flex\",\n    ...styles.tablist\n  };\n  return /* @__PURE__ */ React.createElement(chakra3.div, {\n    ...tablistProps,\n    className: cx(\"chakra-tabs__tablist\", props.className),\n    __css: tablistStyles\n  });\n});\nTabList.displayName = \"TabList\";\n\n// src/tab-panel.tsx\nimport { chakra as chakra4, forwardRef as forwardRef4 } from \"@chakra-ui/system\";\nvar TabPanel = forwardRef4(function TabPanel2(props, ref) {\n  const panelProps = useTabPanel({ ...props, ref });\n  const styles = useTabsStyles();\n  return /* @__PURE__ */ React.createElement(chakra4.div, {\n    outline: \"0\",\n    ...panelProps,\n    className: cx(\"chakra-tabs__tab-panel\", props.className),\n    __css: styles.tabpanel\n  });\n});\nTabPanel.displayName = \"TabPanel\";\n\n// src/tab-panels.tsx\nimport { chakra as chakra5, forwardRef as forwardRef5 } from \"@chakra-ui/system\";\nvar TabPanels = forwardRef5(function TabPanels2(props, ref) {\n  const panelsProps = useTabPanels(props);\n  const styles = useTabsStyles();\n  return /* @__PURE__ */ React.createElement(chakra5.div, {\n    ...panelsProps,\n    width: \"100%\",\n    ref,\n    className: cx(\"chakra-tabs__tab-panels\", props.className),\n    __css: styles.tabpanels\n  });\n});\nTabPanels.displayName = \"TabPanels\";\n\n// src/tab.tsx\nimport {\n  chakra as chakra6,\n  forwardRef as forwardRef6\n} from \"@chakra-ui/system\";\nvar Tab = forwardRef6(function Tab2(props, ref) {\n  const styles = useTabsStyles();\n  const tabProps = useTab({ ...props, ref });\n  const tabStyles = {\n    outline: \"0\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    ...styles.tab\n  };\n  return /* @__PURE__ */ React.createElement(chakra6.button, {\n    ...tabProps,\n    className: cx(\"chakra-tabs__tab\", props.className),\n    __css: tabStyles\n  });\n});\nTab.displayName = \"Tab\";\nexport {\n  Tab,\n  TabIndicator,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  TabsDescendantsProvider,\n  TabsProvider,\n  useTab,\n  useTabIndicator,\n  useTabList,\n  useTabPanel,\n  useTabPanels,\n  useTabs,\n  useTabsContext,\n  useTabsDescendant,\n  useTabsDescendants,\n  useTabsDescendantsContext,\n  useTabsStyles\n};\n","import {\n  HStack,\n  StackProps,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n} from \"@chakra-ui/react\";\nimport { ReactNode } from \"react\";\n\nimport { brandColorScheme } from \"../../../setup/theme/colors\";\n\ntype MenuItemType = { name: string; component: ReactNode };\n\ninterface AppProps {\n  items: MenuItemType[];\n  tabListStyleProps?: StackProps;\n}\n\n/**\n * MenuTab\n *\n * React component that renders ChakraUI tab panels given array\n */\nconst MenuTab = ({ items, tabListStyleProps }: AppProps) => {\n  return (\n    <Tabs isLazy variant=\"soft-rounded\" colorScheme={brandColorScheme}>\n      <HStack {...tabListStyleProps}>\n        <TabList>\n          {items.map((item) => (\n            <Tab key={item.name}>{item.name}</Tab>\n          ))}\n        </TabList>\n      </HStack>\n      <TabPanels>\n        {items.map((item) => (\n          <TabPanel key={item.name}>{item.component}</TabPanel>\n        ))}\n      </TabPanels>\n    </Tabs>\n  );\n};\n\nexport default MenuTab;\n","import { Box, Card, CardBody, CardHeader, Heading } from \"@chakra-ui/react\";\nimport { ReactChartType } from \"../../models\";\nimport ReactChart from \"./ReactChart\";\n\ninterface AppProps {\n  chartTitle: string;\n}\n\n/**\n * React Chart Card\n *\n * Wraps ReactChart with a card and adds a title to the chart\n */\nconst ReactChartCard = ({\n  chartTitle,\n  chartXAxis,\n  chartDatasets,\n  chartOptions,\n  chartType,\n}: ReactChartType & AppProps) => {\n  const reactChartOptions = {\n    // plugins: {\n    //   legend: {\n    //     position: \"top\" as const,\n    //   },\n    // },\n    ...chartOptions,\n  };\n\n  return (\n    <Card bg=\"white\">\n      <CardHeader>\n        <Heading fontSize=\"md\" w=\"100%\">\n          {chartTitle}\n        </Heading>\n      </CardHeader>\n      <CardBody h={300}>\n        <Box h={300} w={\"100%\"}>\n          <ReactChart\n            chartXAxis={chartXAxis}\n            chartDatasets={chartDatasets}\n            chartOptions={reactChartOptions}\n            chartType={chartType}\n          />\n        </Box>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default ReactChartCard;\n","import { SimpleGrid } from \"@chakra-ui/react\";\nimport useAxios from \"axios-hooks\";\nimport { API_URL } from \"../../../../../../common/templates/api\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from \"chart.js\";\n\nimport {\n  brand300a,\n  brand400,\n  greenGenA,\n  redGenA,\n  yellowGenA,\n} from \"../../../../../../setup/theme/colors\";\nimport ReactChartCard from \"../../../../../../common/components/Charts/ReactChartCard\";\nimport { getPallete } from \"../../../../../../setup/theme/utils\";\n\nexport interface ChartDataType {\n  name: string;\n  value: number;\n}\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nconst UserStats = () => {\n  const [{ data: userData, loading }] = useAxios({\n    withCredentials: true,\n    url: `${API_URL}/users_stats`,\n  });\n\n  return (\n    <>\n      {!loading && (\n        <SimpleGrid w=\"100%\" spacing={5} columns={2}>\n          <ReactChartCard\n            chartTitle={\"Users by countries\"}\n            chartXAxis={userData?.countries.map(\n              (item: ChartDataType) => item.name\n            )}\n            chartDatasets={[\n              {\n                label: \"countries\",\n                data: userData?.countries.map(\n                  (item: ChartDataType) => item.value\n                ),\n                backgroundColor: userData?.countries.map(\n                  (_: any, index: number) => getPallete(index)\n                ),\n              },\n            ]}\n            chartType={\"pie\"}\n          />\n          <ReactChartCard\n            chartTitle={\"Users by positions\"}\n            chartXAxis={userData?.positions.map(\n              (item: ChartDataType) => item.name\n            )}\n            chartDatasets={[\n              {\n                label: \"positions\",\n                data: userData?.positions.map(\n                  (item: ChartDataType) => item.value\n                ),\n                backgroundColor: userData?.positions.map(\n                  (_: any, index: number) => getPallete(index)\n                ),\n              },\n            ]}\n            chartType={\"pie\"}\n          />\n          <ReactChartCard\n            chartTitle={\"Users by account status\"}\n            chartXAxis={userData?.status.map(\n              (item: ChartDataType) => item.name\n            )}\n            chartDatasets={[\n              {\n                label: \"status\",\n                data: userData?.status.map((item: ChartDataType) => item.value),\n                backgroundColor: [greenGenA, yellowGenA, \"black\", redGenA],\n              },\n            ]}\n            chartType={\"pie\"}\n          />\n          <ReactChartCard\n            chartTitle={\"Users Over Time\"}\n            chartXAxis={userData?.created.map(\n              (item: ChartDataType) => new Date(item.name)\n            )}\n            chartDatasets={[\n              {\n                label: \"Number of users\",\n                data: userData?.created.map(\n                  (item: ChartDataType) => item.value\n                ),\n                borderColor: brand400,\n                backgroundColor: brand300a,\n                fill: true,\n              },\n            ]}\n            chartType={\"line\"}\n            chartOptions={{\n              scales: {\n                x: {\n                  type: \"time\",\n                  time: {\n                    unit: \"week\",\n                    displayFormats: {\n                      day: \"d MMM\",\n                    },\n                  },\n                },\n              },\n            }}\n          />\n          <ReactChartCard\n            chartTitle={\"Search frequency\"}\n            chartXAxis={userData?.search_frequency.map(\n              (item: ChartDataType) => new Date(item.name)\n            )}\n            chartDatasets={[\n              {\n                label: \"Search result\",\n                data: userData?.search_frequency.map(\n                  (item: ChartDataType) => item.value\n                ),\n                borderColor: brand400,\n                backgroundColor: brand300a,\n                fill: true,\n              },\n            ]}\n            chartType={\"line\"}\n            chartOptions={{\n              scales: {\n                x: {\n                  type: \"time\",\n                  time: {\n                    unit: \"week\",\n                    displayFormats: {\n                      day: \"d MMM\",\n                    },\n                  },\n                },\n              },\n            }}\n          />\n          <ReactChartCard\n            chartTitle={\"Top topics searched\"}\n            chartXAxis={[\"topics\"]}\n            chartDatasets={userData?.top_topics.map(\n              (item: ChartDataType, index: number) => {\n                return {\n                  label: item.name,\n                  data: [item.value],\n                  backgroundColor: getPallete(index),\n                };\n              }\n            )}\n            chartOptions={{\n              scales: {\n                x: {\n                  ticks: {\n                    display: false,\n                  },\n                },\n              },\n            }}\n            chartType={\"bar\"}\n          />\n        </SimpleGrid>\n      )}\n    </>\n  );\n};\n\nexport default UserStats;\n","import { VStack } from \"@chakra-ui/react\";\nimport UserStats from \"./user-stats/UserStats\";\n\nconst AdminStats = () => {\n  return (\n    <VStack spacing={5}>\n      <UserStats />\n    </VStack>\n  );\n};\n\nexport default AdminStats;\n","import { useContext } from \"react\";\nimport { ConfirmContext } from \"../../store/features/confirmContext\";\nimport { ShowConfirmType } from \"../../store/models\";\n\n/**\n * @returns state to hide or show global alert system\n */\n// TODO: clean this up like the status\nconst useGlobalConfirm = (): {\n  onGlobalConfirmOpen: () => void;\n  onGlobalConfirmClose: () => void;\n  showGlobalConfirm: ({\n    title,\n    desc,\n    confirm,\n    unconfirm,\n  }: ShowConfirmType) => void;\n} => {\n  const appContext = useContext(ConfirmContext);\n\n  const showGlobalConfirm = ({\n    title,\n    desc,\n    confirm,\n    unconfirm,\n  }: ShowConfirmType) => {\n    if (appContext.setConfirm) {\n      appContext.setConfirm((prevState) => {\n        return {\n          ...prevState,\n          title: title,\n          desc: desc,\n          confirm: confirm,\n          unconfirm: unconfirm,\n        };\n      });\n    }\n  };\n\n  const onGlobalConfirmOpen = () => {\n    if (appContext.confirm && appContext.confirm.onOpen) {\n      appContext.confirm.onOpen();\n    }\n  };\n\n  const onGlobalConfirmClose = () => {\n    if (appContext.confirm && appContext.confirm.onClose) {\n      appContext.confirm.onClose();\n    }\n  };\n\n  return { onGlobalConfirmOpen, onGlobalConfirmClose, showGlobalConfirm };\n};\n\nexport default useGlobalConfirm;\n","/**\n * Object that determines which role string should be rendered based on numerical value\n */\nexport const AdminRoleDictionary: { [key: number]: string } = {\n  0: \"User\",\n  1: \"Manager\",\n  2: \"Admin\",\n};\n","import {\n  Button,\n  Divider,\n  Heading,\n  HStack,\n  IconButton,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport useGlobalAlert from \"../../../../../common/hooks/useGlobalAlert\";\nimport useGlobalConfirm from \"../../../../../common/hooks/useGlobalConfirm\";\nimport useAPIDataAlert from \"../../../../../common/hooks/useAPIDataAlert\";\nimport useCurrentUser from \"../../../../../common/hooks/useCurrentUser\";\nimport { AdminRoleDictionary } from \"../../../templates/templates\";\nimport { UserStateType } from \"../../../../../store/models\";\nimport useAxiosWrapper from \"common/hooks/useAxiosWrapper\";\nimport { FiAlertCircle, FiAward, FiMenu, FiTrash } from \"react-icons/fi\";\n\ninterface AppProps {\n  onClose: () => void;\n  isOpen: boolean;\n  selectedUser: any;\n  setSelectedUser: React.Dispatch<\n    React.SetStateAction<UserStateType | undefined>\n  >;\n  onOpen: () => void;\n}\n\nconst EditUserModal = ({\n  onClose,\n  isOpen,\n  selectedUser,\n  setSelectedUser,\n}: AppProps) => {\n  const { user } = useCurrentUser();\n  const { showGlobalAlert } = useGlobalAlert();\n  const { onGlobalConfirmOpen, showGlobalConfirm } = useGlobalConfirm();\n  const { postAxios: postManage } = useAxiosWrapper({\n    url: \"build_form/manager_user_form\",\n    method: \"POST\",\n  });\n  const { apiDataAlerter, standardAlertError } = useAPIDataAlert();\n\n  // TODO: error check this, maybe one function for all of these?\n  const handlePromoteDemote = async () => {\n    // * Handle promote / demote\n    const promoteSuccess = () => {\n      setSelectedUser((prevState) => {\n        if (prevState) return { ...prevState, admin: 1 };\n      });\n    };\n    const demoteSuccess = () => {\n      setSelectedUser((prevState) => {\n        if (prevState) return { ...prevState, admin: 0 };\n      });\n    };\n\n    try {\n      // * If user has no role, promote to manager\n      if (selectedUser?.admin === null || selectedUser?.admin === 0) {\n        const { data } = await postManage({\n          target_user: selectedUser?.email,\n          action: \"promoted\",\n        });\n        apiDataAlerter({\n          data: data,\n          onSuccess: promoteSuccess,\n          successMsg: `You have promoted ${selectedUser?.name}`,\n        });\n        // * If user has manager role, demote to user\n      } else if (selectedUser?.admin === 1) {\n        const { data } = await postManage({\n          target_user: selectedUser?.email,\n          action: \"demoted\",\n        });\n        apiDataAlerter({\n          data: data,\n          onSuccess: demoteSuccess,\n          successMsg: `You have demoted ${selectedUser?.name}`,\n        });\n      } else {\n        // * If user is admin, stop the promotion/demotion action\n        showGlobalAlert(\n          \"Something went wrong!\",\n          \"You cannot change an admin's role\"\n        );\n      }\n    } catch {\n      standardAlertError();\n    }\n  };\n\n  const handleBanUnban = async () => {\n    // * Handle ban and unban\n    const banSuccess = () => {\n      setSelectedUser((prevState) => {\n        if (prevState) return { ...prevState, active: false };\n      });\n    };\n    const unbanSuccess = () => {\n      setSelectedUser((prevState) => {\n        if (prevState) return { ...prevState, active: true };\n      });\n    };\n\n    // * If user is active, ban them\n    try {\n      // * If user is not banned, ban them\n      if (selectedUser?.active) {\n        const { data } = await postManage({\n          target_user: selectedUser?.email,\n          action: \"banned\",\n        });\n        apiDataAlerter({\n          data: data,\n          onSuccess: banSuccess,\n          successMsg: `You have banned ${selectedUser.name}`,\n        });\n        // * If user is banned, unban them\n      } else {\n        const { data } = await postManage({\n          target_user: selectedUser?.email,\n          action: \"un-banned\",\n        });\n        apiDataAlerter({\n          data: data,\n          onSuccess: unbanSuccess,\n          successMsg: `You have unbanned ${selectedUser?.name}`,\n        });\n      }\n    } catch {\n      standardAlertError();\n    }\n  };\n\n  const handleDeleteUser = () => {\n    const deleteSuccess = () => {\n      setSelectedUser(undefined);\n      onClose();\n    };\n\n    const deleteUser = async () => {\n      try {\n        const { data } = await postManage({\n          target_user: selectedUser?.email,\n          action: \"deleted\",\n        });\n        apiDataAlerter({\n          data: data,\n          onSuccess: deleteSuccess,\n          successMsg: `You have deleted ${selectedUser?.name}`,\n        });\n      } catch {\n        standardAlertError();\n      }\n    };\n\n    if (onGlobalConfirmOpen) {\n      showGlobalConfirm({\n        title: \"This action cannot be undone\",\n        desc: `Are you sure you want to delete ${selectedUser?.name}? `,\n        confirm: deleteUser,\n      });\n      onGlobalConfirmOpen();\n    }\n  };\n\n  const handleEmail = async () => {\n    const successUnVerify = () => {\n      setSelectedUser((prevState) => {\n        if (prevState) return { ...prevState, verified: false };\n      });\n    };\n    const successVerify = () => {\n      setSelectedUser((prevState) => {\n        if (prevState) return { ...prevState, verified: true };\n      });\n    };\n\n    try {\n      if (selectedUser?.verified) {\n        const { data } = await postManage({\n          target_user: selectedUser?.email,\n          action: \"manual un-verification\",\n        });\n        apiDataAlerter({\n          data: data,\n          onSuccess: successUnVerify,\n          successMsg: `You unverfied ${selectedUser.name}'s email`,\n        });\n        // * If user has verified email, unverify\n      } else {\n        const { data } = await postManage({\n          target_user: selectedUser?.email,\n          action: \"manual verification\",\n        });\n        apiDataAlerter({\n          data: data,\n          onSuccess: successVerify,\n          successMsg: `You verfied ${selectedUser?.name}'s email`,\n        });\n      }\n    } catch {\n      standardAlertError();\n    }\n  };\n\n  interface selectedUserPropertiesType {\n    name: string;\n    property: keyof UserStateType;\n    editTitle?: string;\n    editFunction?: () => void;\n    dictionary?: any;\n  }\n\n  const selectedUserProperties: selectedUserPropertiesType[] = [\n    {\n      name: selectedUser?.verified ? \"Verfied email\" : \"Unverified email\",\n      property: \"email\",\n      editTitle: selectedUser?.verified ? \"Unverify email\" : \"Verify email\",\n      editFunction: handleEmail,\n    },\n\n    {\n      name: \"Role\",\n      property: \"admin\",\n      dictionary: AdminRoleDictionary,\n    },\n    {\n      name: selectedUser?.active ? \"Active account\" : \"Banned account\",\n      property: \"isLoggedIn\",\n    },\n    { name: \"Company\", property: \"company\" },\n    { name: \"Country\", property: \"country\" },\n    { name: \"Department\", property: \"department\" },\n    { name: \"Purpose\", property: \"purpose\" },\n  ];\n\n  return (\n    <Modal onClose={onClose} isOpen={isOpen} isCentered>\n      <ModalOverlay />\n      <ModalContent maxW=\"4xl\">\n        <ModalHeader>\n          <HStack justify=\"space-between\" pt={10}>\n            <Heading>Edit {selectedUser?.name}</Heading>\n            {/* Admin controls */}\n            {/* TODO map and move this to own */}\n            {user?.admin === 2 && (\n              <Menu>\n                <MenuButton\n                  as={IconButton}\n                  aria-label=\"Options\"\n                  icon={<FiMenu />}\n                  variant=\"outline\"\n                />\n                <MenuList fontSize={\"md\"}>\n                  <MenuItem icon={<FiTrash />} onClick={handleDeleteUser}>\n                    Delete user\n                  </MenuItem>\n                  <MenuItem icon={<FiAlertCircle />} onClick={handleBanUnban}>\n                    {selectedUser?.active ? \"Ban user\" : \"Unban user\"}\n                  </MenuItem>\n                  <MenuItem icon={<FiAward />} onClick={handlePromoteDemote}>\n                    {selectedUser?.admin === 1\n                      ? \"Demote to user\"\n                      : \"Promote to manager\"}\n                  </MenuItem>\n                </MenuList>\n              </Menu>\n            )}\n          </HStack>\n        </ModalHeader>\n        <Divider />\n        <ModalCloseButton />\n        <ModalBody py={5}>\n          <VStack align=\"flex-start\" spacing={5}>\n            {/* User properties */}\n            {selectedUser &&\n              selectedUserProperties.map((item, i) => (\n                <>\n                  <HStack key={i}>\n                    <Heading fontSize=\"md\">{item.name}</Heading>\n                    <Text>\n                      {item.dictionary\n                        ? item.dictionary[selectedUser[item.property]]\n                        : typeof selectedUser[item.property] !== \"string\" ||\n                          selectedUser[item.property].length > 0\n                        ? selectedUser[item.property]\n                        : \"Not available\"}\n                    </Text>\n                    {item.editTitle && item.editFunction && (\n                      <Button size={\"sm\"} onClick={item.editFunction}>\n                        {item.editTitle}\n                      </Button>\n                    )}\n                  </HStack>\n                  <Divider />\n                </>\n              ))}\n          </VStack>\n        </ModalBody>\n        <ModalFooter>\n          <Button onClick={onClose}>Close</Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default EditUserModal;\n","import { Search2Icon } from \"@chakra-ui/icons\";\nimport {\n  Button,\n  Center,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  TableContainer,\n  useDisclosure,\n  VStack,\n} from \"@chakra-ui/react\";\nimport useAxios from \"axios-hooks\";\nimport React, { useEffect, useState } from \"react\";\nimport { Table, Thead, Tbody, Tr, Th, Td } from \"@chakra-ui/react\";\n\nimport { gray300 } from \"../../../../../setup/theme/colors\";\nimport EditUserModal from \"./EditUserModal\";\nimport { API_URL } from \"../../../../../common/templates/api\";\nimport { AdminRoleDictionary } from \"../../../templates/templates\";\nimport useAxiosConfig from \"../../../../../common/hooks/useAxiosConfig\";\nimport { UserStateType } from \"../../../../../store/models\";\nimport useAxiosWrapper from \"common/hooks/useAxiosWrapper\";\n\n// TODO: error check\nconst UserManager = () => {\n  const [search, setSearch] = useState(\"\");\n  const [selectedUser, setSelectedUser] = useState<UserStateType>();\n  const [userData, setUserData] = useState<UserStateType[]>([]);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  // * Fetching user data, by posting the search query\n  const { postAxios: postQuery } = useAxiosWrapper({\n    url: \"build_form/search_user_form\",\n    method: \"POST\",\n  });\n\n  // * Every 0.7 seconds when a user types, call that query\n  useEffect(() => {\n    const timer = setTimeout(async () => {\n      const { data } = await postQuery({ query: search, page: 1 });\n      if (data?.success) {\n        setUserData(data.success?.users);\n      }\n    }, 700);\n    return () => {\n      clearTimeout(timer);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search, isOpen]);\n\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  };\n\n  const handleMangerUser = (user: UserStateType) => {\n    setSelectedUser(user);\n    onOpen();\n  };\n\n  return (\n    <>\n      <EditUserModal\n        isOpen={isOpen}\n        onClose={onClose}\n        onOpen={onOpen}\n        selectedUser={selectedUser}\n        setSelectedUser={setSelectedUser}\n      />\n      <VStack w=\"100%\">\n        <InputGroup>\n          <InputLeftElement\n            pointerEvents=\"none\"\n            children={<Search2Icon color={gray300} />}\n          />\n          <Input\n            onChange={handleSearch}\n            value={search}\n            placeholder=\"Search for a user's name, email address, or ID\"\n            bg=\"white\"\n          />\n        </InputGroup>\n\n        <TableContainer\n          h={500}\n          w=\"100%\"\n          overflowY=\"auto\"\n          border=\"1px\"\n          borderColor=\"gray.200\"\n          pos=\"relative\"\n          bg=\"white\"\n        >\n          <Table variant=\"simple\">\n            <Thead>\n              <Tr>\n                <Th isNumeric>ID</Th>\n                <Th>Name</Th>\n                <Th>Email</Th>\n                <Th>Role</Th>\n                <Th></Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {/* Only render data if there is no errors & has valid data */}\n              {userData &&\n              userData.length > 0 &&\n              !userData.hasOwnProperty(\"error\") ? (\n                userData?.map((item: UserStateType) => (\n                  <Tr key={item.id}>\n                    <Td isNumeric>{item.id}</Td>\n                    <Td>{item.name}</Td>\n                    <Td>{item.email}</Td>\n                    <Td>{AdminRoleDictionary[item.admin]}</Td>\n                    {/* Open edit user modal */}\n                    <Td>\n                      <Button\n                        onClick={() => {\n                          handleMangerUser(item);\n                        }}\n                      >\n                        Manage\n                      </Button>\n                    </Td>\n                  </Tr>\n                ))\n              ) : (\n                <Center color={gray300} pos={\"absolute\"} w=\"100%\" h=\"80%\">\n                  No users found\n                </Center>\n              )}\n            </Tbody>\n          </Table>\n        </TableContainer>\n      </VStack>\n    </>\n  );\n};\n\nexport default UserManager;\n","import { Box, Container } from \"@chakra-ui/react\";\nimport PageHeader from \"common/components/PageHeader\";\nimport MenuTab from \"../../../common/components/MenuTabs\";\nimport usePageTitle from \"../../../common/hooks/usePageTitle\";\nimport AdminStats from \"./components/stats/AdminStats\";\nimport UserManager from \"./components/user-manager/UserManager\";\n\nexport const ADMIN_MENU_ITEMS = [\n  { name: \"Overview\", component: <AdminStats /> },\n  { name: \"Manage\", component: <UserManager /> },\n];\n\nconst Admin = () => {\n  usePageTitle(\"Admin\");\n  return (\n    <Box py={100}>\n      <PageHeader\n        subTitle={\"Manage\"}\n        title={\"Administrator\"}\n        desc={\"Manage users or view site statistics\"}\n        stackProps={{ pb: 50 }}\n      />\n      <Container maxW=\"6xl\">\n        <MenuTab items={ADMIN_MENU_ITEMS} />\n      </Container>\n    </Box>\n  );\n};\n\nexport default Admin;\n","import {\n  blueGenA,\n  greenGenA,\n  lightBlueGenA,\n  orangeGenA,\n  pinkGenA,\n  purpleGenA,\n  redGenA,\n  yellowGenA,\n} from \"../colors\";\n\nexport function getPallete(index: number) {\n  const colors = [\n    redGenA,\n    orangeGenA,\n    yellowGenA,\n    greenGenA,\n    lightBlueGenA,\n    blueGenA,\n    pinkGenA,\n    purpleGenA,\n  ];\n\n  return colors[index % colors.length];\n}\n"],"names":["chartXAxis","chartDatasets","chartOptions","chartType","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","ArcElement","PointElement","LineElement","BarController","PieController","LineController","TimeScale","reactChartOptions","barChartOptions","scales","y","ticks","precision","options","responsive","maintainAspectRatio","tooltips","position","data","labels","datasets","type","showGlobalAlert","useGlobalAlert","useGlobalFormik","formikSlice","newCaptcha","standardAlertError","apiDataAlerter","onSuccess","successMsg","onFailure","failureMsg","containsSuccess","success","containsError","error","captcha","img","length","tryCatchWrapper","func","globalAlert","useAppSelector","state","alert","dispatch","useAppDispatch","toast","useToast","title","desc","status","duration","showAlert","description","undefined","isClosable","hideGlobalAlert","hideAlert","formik","useAxios","url","API_URL","withCredentials","manual","getNewCaptcha","setCaptcha","audio","setNewCaptcha","setFormik","key","fieldsInfo","loading","setFormikSlice","resetGlobalFormik","resetFormikSlice","obj","hasOwnProperty","findMatch","text","which","arr","toLowerCase","start","end","candidate_index","mid","Math","floor","elem","substr","matchItems","matches","slice","sort","a","b","getFieldInfo","property","filter","item","shift","cx","classNames","Boolean","join","callAllHandlers","fns","event","some","fn","defaultPrevented","createDescendantContext","TabsDescendantsProvider","useTabsDescendantsContext","useTabsDescendants","useTabsDescendant","createContext","name","errorMessage","TabsProvider","useTabsContext","TabPanelProvider","useTabPanelContext","makeTabId","id","index","makeTabPanelId","createContext2","TabsStylesProvider","useTabsStyles","Tabs","forwardRef","props","ref","styles","useMultiStyleConfig","omitThemingProps","children","className","defaultIndex","onChange","isManual","isLazy","lazyBehavior","orientation","direction","htmlProps","useState","focusedIndex","setFocusedIndex","useControllableState","defaultValue","value","selectedIndex","setSelectedIndex","useEffect","descendants","uuid","useId","uid","useTabs","ctx","context","useMemo","rootProps","isFitted","React","chakra","__css","root","displayName","forwardRef2","indicatorStyle","isHorizontal","isVertical","left","width","top","height","rect","setRect","hasMeasured","setHasMeasured","useSafeLayoutEffect","tab","node","offsetLeft","offsetWidth","offsetTop","offsetHeight","requestAnimationFrame","cancelAnimationFrame","transitionProperty","transitionDuration","transitionTimingFunction","useTabIndicator","style","chakra2","indicator","TabList","forwardRef3","tablistProps","onKeyDown","useCallback","nextTab","_a","next","nextEnabled","focus","prevTab","prev","prevEnabled","eventKey","ArrowStart","ArrowEnd","action","first","firstEnabled","last","lastEnabled","preventDefault","role","useTabList","tablistStyles","display","tablist","chakra3","TabPanel","forwardRef4","panelProps","isSelected","tabId","hasBeenSelected","useRef","current","shouldRenderChildren","lazyDisclosure","wasSelected","enabled","mode","tabIndex","hidden","useTabPanel","chakra4","outline","tabpanel","TabPanels","forwardRef5","panelsProps","getValidChildren","map","child","createElement","useTabPanels","chakra5","tabpanels","Tab","forwardRef6","tabProps","isDisabled","isFocusable","disabled","register","clickableProps","useClickable","mergeRefs","onClick","onFocus","useTab","tabStyles","alignItems","justifyContent","chakra6","items","tabListStyleProps","variant","colorScheme","brandColorScheme","component","chartTitle","bg","fontSize","w","h","ReactChart","Filler","userData","spacing","columns","countries","label","backgroundColor","_","getPallete","positions","greenGenA","yellowGenA","redGenA","created","Date","borderColor","brand400","brand300a","fill","x","time","unit","displayFormats","day","search_frequency","top_topics","appContext","useContext","ConfirmContext","onGlobalConfirmOpen","confirm","onOpen","onGlobalConfirmClose","onClose","showGlobalConfirm","unconfirm","setConfirm","prevState","AdminRoleDictionary","isOpen","selectedUser","setSelectedUser","user","useCurrentUser","useGlobalConfirm","postManage","useAxiosWrapper","method","postAxios","useAPIDataAlert","handlePromoteDemote","promoteSuccess","admin","demoteSuccess","target_user","email","handleBanUnban","banSuccess","active","unbanSuccess","handleEmail","successUnVerify","verified","successVerify","selectedUserProperties","editTitle","editFunction","dictionary","isCentered","maxW","justify","pt","as","IconButton","icon","deleteSuccess","deleteUser","py","align","i","size","search","setSearch","setUserData","useDisclosure","postQuery","timer","setTimeout","query","page","users","clearTimeout","pointerEvents","color","gray300","e","target","placeholder","overflowY","border","pos","Tr","Th","isNumeric","Td","ADMIN_MENU_ITEMS","usePageTitle","PageHeader","subTitle","stackProps","pb","colors","orangeGenA","lightBlueGenA","blueGenA","pinkGenA","purpleGenA"],"sourceRoot":""}