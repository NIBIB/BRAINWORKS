{"version":3,"file":"static/js/661.75b7b5c7.chunk.js","mappings":"yNAiFA,UAtEsB,WACpB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAiCC,EAAAA,EAAAA,KAAzBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,eACNC,GAAmBC,EAAAA,EAAAA,KAAnBD,eACFE,GAAQC,EAAAA,EAAAA,MAqCd,OACE,SAAC,IAAD,CACEC,QA7CM,0BA8CNC,eArCiB,SAACC,EAAWC,GAO/BP,EAAe,CACbM,KAAMA,EACNE,UAAW,YAPY,SAACV,GACxBC,EAAeD,GACfH,EAAS,YACV,CAKGc,CAAgB,OAACH,QAAD,IAACA,OAAD,EAACA,EAAMI,SACvB,OAAIJ,QAAJ,IAAIA,GAAAA,EAAMK,OACRT,EAAM,CACJU,MAAM,gCAAD,cAAkCN,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAMI,QAAQG,MAAhD,KACLC,YAAY,wEACZC,OAAQ,UACRC,SAAU,KACVC,YAAY,EACZC,SAAU,QAGZhB,EAAM,CACJU,MAAM,WACNE,YAAY,+BACZC,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,OAGf,GAEJ,EAMGC,iBAAkB,CAAEN,MAAO,GAAIO,SAAU,IAH3C,SAKG,gBAAGC,EAAH,EAAGA,aAAH,OACC,SAAC,IAAD,CACET,MAAK,wBAAYd,QAAZ,IAAYA,OAAZ,EAAYA,EAAMe,OACvBS,KAAK,oHAFP,UAIE,UAAC,KAAD,CAAQC,QAAS,EAAGC,MAAM,SAASC,EAAE,OAArC,WACE,SAAC,IAAD,CAAYC,SAAS,WACrB,SAAC,IAAD,CAAYA,SAAS,cACrB,SAAC,KAAD,CACEC,KAAK,SACLC,YAAY,OACZC,MAAM,OACNC,WAAYT,EAJd,wBARL,GAqBN,C,gGCnCD,IAzB2B,SAAC,GAAyC,IAAvCT,EAAsC,EAAtCA,MAAOU,EAA+B,EAA/BA,KAAMS,EAAyB,EAAzBA,SACnCpC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAAC,KAAD,CAAM6B,EAAE,QAAQO,EAAE,QAAQC,QAAQ,SAAST,MAAM,SAAjD,UACE,SAAC,KAAD,WACE,SAAC,IAAD,CAAMU,SAAU,CAAEC,EAAG,EAAGC,aAAc,MAAtC,UACE,UAAC,KAAD,CAAQX,EAAE,OAAOD,MAAM,aAAaD,QAAS,EAA7C,WACE,UAAC,KAAD,CAAQc,QAAS,kBAAM1C,GAAU,EAAhB,EAAoB8B,EAAE,OAAvC,WACE,SAAC,KAAD,CAAMa,GAAIC,EAAAA,IAAaC,MAAM,cAC7B,SAAC,KAAD,CAASC,WAAY,IAAKC,KAAK,KAAKF,MAAM,WAA1C,sBAIF,SAAC,KAAD,CAASE,KAAK,KAAd,SAAoB9B,KACpB,SAAC,KAAD,CAAS8B,KAAK,KAAKD,WAAY,IAAKD,MAAM,WAA1C,SACGlB,IAEFS,UAMZ,C","sources":["pages/settings-pages/SettingsEmail/index.tsx","pages/settings-pages/components/ChangeSettingsCard/index.tsx"],"sourcesContent":["import { Button, useToast, VStack } from \"@chakra-ui/react\";\nimport FlaskField from \"common/components/FlaskField\";\nimport FlaskForm from \"common/components/FlaskForm\";\nimport useAPIDataAlert from \"common/hooks/useAPIDataAlert\";\nimport useCurrentUser from \"common/hooks/useCurrentUser\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UserStateType } from \"store/models\";\nimport ChangeSettingsCard from \"../components/ChangeSettingsCard\";\n\nconst KEY = \"profile_edit_email_form\";\n\nconst SettingsEmail = () => {\n  const navigate = useNavigate();\n  const { user, setCurrentUser } = useCurrentUser();\n  const { apiDataAlerter } = useAPIDataAlert();\n  const toast = useToast();\n\n  // * Handles on form submit\n  const handleSubmit = (data: any, _values: any) => {\n    // * Successful login, sets current user state and navigates to index page\n    const editEmailSuccess = (user: UserStateType) => {\n      setCurrentUser(user);\n      navigate(\"/settings\");\n    };\n    // * Otherwise, alert success or give errors\n    apiDataAlerter({\n      data: data,\n      onSuccess: () => {\n        editEmailSuccess(data?.success);\n        if (data?.verify) {  // if the user must verify this new email\n          toast({\n            title: `Please verify your new email ${data?.success.email} `,\n            description: `Check your inbox for the email verification in order to log in again.`,\n            status: \"warning\",\n            duration: null,\n            isClosable: true,\n            position: \"top\",\n          });\n        } else {  // they don't have to\n          toast({\n            title: `Success!`,\n            description: `Your email has been changed.`,\n            status: \"success\",\n            duration: 2000,\n            isClosable: true,\n            position: \"top\",\n          });\n        }\n      },\n    });\n  };\n\n  return (\n    <FlaskForm\n      formKey={KEY}\n      runAfterSubmit={handleSubmit}\n      resetAfterSubmit={{ email: \"\", password: \"\" }}\n    >\n      {({ isSubmitting }) => (\n        <ChangeSettingsCard\n          title={`Change ${user?.email}`}\n          desc=\"A confirmation will be sent to your new email. Click on the confirmation link to verify in order to log in again.\"\n        >\n          <VStack spacing={5} align=\"center\" w=\"100%\">\n            <FlaskField property=\"email\" />\n            <FlaskField property=\"password\" />\n            <Button\n              type=\"submit\"\n              colorScheme=\"blue\"\n              width=\"full\"\n              isDisabled={isSubmitting}\n            >\n              Change\n            </Button>\n          </VStack>\n        </ChangeSettingsCard>\n      )}\n    </FlaskForm>\n  );\n};\n\nexport default SettingsEmail;\n","import {\n  Container,\n  Flex,\n  Heading,\n  HStack,\n  Icon,\n  VStack,\n} from \"@chakra-ui/react\";\nimport Card from \"common/components/Card\";\nimport React, { ReactNode } from \"react\";\nimport { FiArrowLeft } from \"react-icons/fi\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface AppProps {\n  title: string;\n  desc: string;\n  children: ReactNode;\n}\n\nconst ChangeSettingsCard = ({ title, desc, children }: AppProps) => {\n  const navigate = useNavigate();\n  return (\n    <Flex w=\"100vw\" h=\"100vh\" justify=\"center\" align=\"center\">\n      <Container>\n        <Card boxProps={{ p: 5, borderRadius: \"md\" }}>\n          <VStack w=\"100%\" align=\"flex-start\" spacing={3}>\n            <HStack onClick={() => navigate(-1)} w=\"100%\">\n              <Icon as={FiArrowLeft} color=\"gray.600\" />\n              <Heading fontWeight={500} size=\"xs\" color=\"gray.600\">\n                Back\n              </Heading>\n            </HStack>\n            <Heading size=\"md\">{title}</Heading>\n            <Heading size=\"sm\" fontWeight={400} color=\"gray.600\">\n              {desc}\n            </Heading>\n            {children}\n          </VStack>\n        </Card>\n      </Container>\n    </Flex>\n  );\n};\n\nexport default ChangeSettingsCard;\n"],"names":["navigate","useNavigate","useCurrentUser","user","setCurrentUser","apiDataAlerter","useAPIDataAlert","toast","useToast","formKey","runAfterSubmit","data","_values","onSuccess","editEmailSuccess","success","verify","title","email","description","status","duration","isClosable","position","resetAfterSubmit","password","isSubmitting","desc","spacing","align","w","property","type","colorScheme","width","isDisabled","children","h","justify","boxProps","p","borderRadius","onClick","as","FiArrowLeft","color","fontWeight","size"],"sourceRoot":""}